<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xzj个人记录</title>
  
  
  <link href="https://xuzengjie.gitee.io/atom.xml" rel="self"/>
  
  <link href="https://xuzengjie.gitee.io/"/>
  <updated>2024-02-23T05:20:03.018Z</updated>
  <id>https://xuzengjie.gitee.io/</id>
  
  <author>
    <name>徐增杰</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>73-页面布局</title>
    <link href="https://xuzengjie.gitee.io/archives/fa397130.html"/>
    <id>https://xuzengjie.gitee.io/archives/fa397130.html</id>
    <published>2024-01-03T16:00:00.000Z</published>
    <updated>2024-02-23T05:20:03.018Z</updated>
    
    <content type="html"><![CDATA[<h1 id="弹性盒子"><a href="#弹性盒子" class="headerlink" title="弹性盒子"></a>弹性盒子</h1><p>CSS 弹性盒子（Flexbox）是一种新的布局模式，用于对容器中的项目进行灵活的布局、对齐和分配空间。它特别适用于各种屏幕尺寸和设备类型，并且可以快速、简单地实现响应式设计。</p><p>弹性盒模型主要由弹性容器（Flex container）和弹性子元素（Flex items）组成。弹性容器是通过设置 display 属性的值为 flex 或 inline-flex 来定义的，而弹性子元素则是容器内的项目。</p><p>弹性盒布局提供了多种属性来控制子元素的位置、对齐和空间分配，包括：</p><p>flex-direction：用于定义主轴的方向，决定了子元素的排列方式。<br>flex-wrap：控制子元素是否换行以及如何换行。<br>justify-content：用于在主轴上对齐子元素。<br>align-items 和 align-content：用于在交叉轴上对齐子元素。<br>此外，弹性盒模型还提供了诸如 flex-grow、flex-shrink 和 flex-basis 等属性，用于控制子元素如何伸长或缩短以适应容器空间。</p><p>尽管弹性盒模型具有强大的布局功能，但它的语法相对简单易懂，特别适用于现代响应式设计的需求。然而，由于不同浏览器的兼容性问题，使用弹性盒布局时仍需注意处理各种边缘情况。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.container</span> &#123;</span></span><br><span class="line">display: flex;</span><br><span class="line">flex-direction: column;</span><br><span class="line">justify-content: center;</span><br><span class="line"><span class="css"><span class="comment">/* align-items: center; */</span></span></span><br><span class="line">height: 100vh;</span><br><span class="line">overflow: visible;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.item1</span> &#123;</span></span><br><span class="line">flex: 1;</span><br><span class="line">background-color: lightblue;</span><br><span class="line">border: 1px solid black;</span><br><span class="line">padding: 10px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.item2</span> &#123;</span></span><br><span class="line">flex: 2;</span><br><span class="line">background-color: lightblue;</span><br><span class="line">border: 1px solid black;</span><br><span class="line">padding: 10px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.item3</span> &#123;</span></span><br><span class="line">flex: 3;</span><br><span class="line">background-color: lightblue;</span><br><span class="line">border: 1px solid black;</span><br><span class="line">padding: 10px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">&quot;margin: 0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item1&quot;</span>&gt;</span>Item 1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: flex; flex-direction: row&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;flex: 1&quot;</span>&gt;</span>aaaaaaaa<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;flex: 2&quot;</span>&gt;</span>bbbbbbbbb<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;flex: 3&quot;</span>&gt;</span>cccccccccccc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item3&quot;</span>&gt;</span>Item 3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;弹性盒子&quot;&gt;&lt;a href=&quot;#弹性盒子&quot; class=&quot;headerlink&quot; title=&quot;弹性盒子&quot;&gt;&lt;/a&gt;弹性盒子&lt;/h1&gt;&lt;p&gt;CSS 弹性盒子（Flexbox）是一种新的布局模式，用于对容器中的项目进行灵活的布局、对齐和分配空间。它特别适用于各种屏幕</summary>
      
    
    
    
    
    <category term="html" scheme="https://xuzengjie.gitee.io/tags/html/"/>
    
    <category term="布局" scheme="https://xuzengjie.gitee.io/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>72-Electron</title>
    <link href="https://xuzengjie.gitee.io/archives/25e9112c.html"/>
    <id>https://xuzengjie.gitee.io/archives/25e9112c.html</id>
    <published>2023-12-05T16:00:00.000Z</published>
    <updated>2024-01-05T00:16:01.240Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>使用 Electron 封装网页为 EXE</p><h1 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><h1 id="添加-index-js"><a href="#添加-index-js" class="headerlink" title="添加 index.js"></a>添加 index.js</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">const &#123; app, BrowserWindow &#125; &#x3D; require(&#39;electron&#39;)</span><br><span class="line"></span><br><span class="line">app.on(&#39;ready&#39;, () &#x3D;&gt; &#123;</span><br><span class="line">const mainWin &#x3D; new BrowserWindow(&#123;</span><br><span class="line">&#x2F;&#x2F;frame: false &#x2F;&#x2F;隐藏窗体边框</span><br><span class="line">&#125;)</span><br><span class="line">&#x2F;&#x2F;隐藏菜单栏</span><br><span class="line">mainWin.setMenuBarVisibility(false)</span><br><span class="line">mainWin.loadURL(&#39;http:&#x2F;&#x2F;192.168.152.3:9200&#x2F;?t&#x3D;&#39; + new Date().getTime())</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="添加-electron-packager"><a href="#添加-electron-packager" class="headerlink" title="添加 electron-packager"></a>添加 electron-packager</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install electron-packager --save-dev</span><br></pre></td></tr></table></figure><p>在 package.json 中添加代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;package&quot;: &quot;electron-packager .&#x2F; myapp --out .&#x2F;OutApp --arch&#x3D;x64 --electron-version&#x3D;28.0.0 --overwrite --icon&#x3D;.&#x2F;app&#x2F;img&#x2F;icon&#x2F;icon.ico&quot;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>sourcedir：项目所在路径<br>appname：应用名称<br>platform：确定了你要构建哪个平台的应用（Windows、Mac 还是 Linux）<br>architecture：决定了使用 x86 还是 x64 还是两个架构都用<br>electron version：electron 的版本<br>optional options：可选选项</p><h1 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run package</span><br></pre></td></tr></table></figure><p>打包成功后，会在 OutApp 目录（此处的目录是在参数中配置的）下生成.exe，运行该文件，并且没有报错，则说明本次打包成功。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;使用 Electron 封装网页为 EXE&lt;/p&gt;
&lt;h1 id=&quot;初始化&quot;&gt;&lt;a href=&quot;#初始化&quot; class=&quot;headerlin</summary>
      
    
    
    
    
    <category term="封装" scheme="https://xuzengjie.gitee.io/tags/%E5%B0%81%E8%A3%85/"/>
    
    <category term="Electron" scheme="https://xuzengjie.gitee.io/tags/Electron/"/>
    
  </entry>
  
  <entry>
    <title>71-浏览器文字转语言</title>
    <link href="https://xuzengjie.gitee.io/archives/5b44af25.html"/>
    <id>https://xuzengjie.gitee.io/archives/5b44af25.html</id>
    <published>2023-09-09T16:00:00.000Z</published>
    <updated>2023-12-12T07:36:20.474Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>HTML5 提供了 Web Speech API，它可以实现将文本转换为语音的功能。</p><h1 id="浏览器兼容性"><a href="#浏览器兼容性" class="headerlink" title="浏览器兼容性"></a>浏览器兼容性</h1><table><thead><tr><th>浏览器</th><th>版本要求</th></tr></thead><tbody><tr><td>Chrome</td><td>33+</td></tr><tr><td>Safari</td><td>7.1+</td></tr><tr><td>Firefox</td><td>49+</td></tr><tr><td>Edge</td><td>14+</td></tr><tr><td>Opera</td><td>37+</td></tr></tbody></table><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML5语音播报<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;text&quot;</span>&gt;</span>请输入要播报的文本：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;speak()&quot;</span>&gt;</span>播放<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">speak</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> text = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;text&#x27;</span>).value</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> message = <span class="keyword">new</span> SpeechSynthesisUtterance()</span></span><br><span class="line"><span class="javascript"><span class="comment">//message.volume = 1 // 音量（0-1）</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//message.rate = 1 // 语速（0.1-10）</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//message.pitch = 1 // 音调（0-2）</span></span></span><br><span class="line">message.text = text</span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.speechSynthesis.speak(message)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="SpeechSynthesisUtterance-主要属性"><a href="#SpeechSynthesisUtterance-主要属性" class="headerlink" title="SpeechSynthesisUtterance 主要属性"></a>SpeechSynthesisUtterance 主要属性</h1><ul><li>text：这是一个字符串，表示要合成为语音的文本。</li><li>lang：这是一个字符串，表示用于合成语音的语言。例如，”en-US”表示美国英语，”zh-CN”是中文</li><li>volume：这是一个浮点数，表示说话的音量。它的值范围通常是 0（无声）到 1（最大音量）。</li><li>rate：这是一个浮点数，表示说话的速度。值越大，说话速度越快。</li><li>pitch：这是一个浮点数，表示声音的音调。值越大，音调越高。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;HTML5 提供了 Web Speech API，它可以实现将文本转换为语音的功能。&lt;/p&gt;
&lt;h1 id=&quot;浏览器兼容性&quot;&gt;&lt;a href</summary>
      
    
    
    
    
    <category term="浏览器" scheme="https://xuzengjie.gitee.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
    <category term="文字转语音" scheme="https://xuzengjie.gitee.io/tags/%E6%96%87%E5%AD%97%E8%BD%AC%E8%AF%AD%E9%9F%B3/"/>
    
  </entry>
  
  <entry>
    <title>70-MySQL文件安装</title>
    <link href="https://xuzengjie.gitee.io/archives/5b44af25.html"/>
    <id>https://xuzengjie.gitee.io/archives/5b44af25.html</id>
    <published>2023-08-09T16:00:00.000Z</published>
    <updated>2023-09-13T08:25:11.961Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>下载 Windows (x86, 64-bit), ZIP Archive：<a href="https://dev.mysql.com/downloads/file/?id=520511">https://dev.mysql.com/downloads/file/?id=520511</a></p><h1 id="解压到-D-盘"><a href="#解压到-D-盘" class="headerlink" title="解压到 D 盘"></a>解压到 D 盘</h1><p>解压到 D:\mysql-8.1.0-winx64</p><h1 id="配置系统环境变量"><a href="#配置系统环境变量" class="headerlink" title="配置系统环境变量"></a>配置系统环境变量</h1><p>配置系统环境变量，Path 内增加 D:\mysql-8.1.0-winx64\bin</p><h1 id="配置初始化-my-ini-文件"><a href="#配置初始化-my-ini-文件" class="headerlink" title="配置初始化 my.ini 文件"></a>配置初始化 my.ini 文件</h1><p>在 D:\mysql-8.1.0-winx64 下新建 my.ini，内容如下,（注意内的文件夹路径，若改变路径，需要修改配置）<br>注意：my.ini 的编码格式要是 ANSI.(可另存为时右下角查看)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line"># 设置mysql客户端连接服务端时默认使用的端口</span><br><span class="line">port&#x3D;3306</span><br><span class="line">default-character-set&#x3D;utf8mb4</span><br><span class="line">[mysql]</span><br><span class="line">default-character-set &#x3D; utf8mb4</span><br><span class="line">[mysqld]</span><br><span class="line"># 设置3306端口</span><br><span class="line">port&#x3D;3306</span><br><span class="line"># 设置mysql数据库的数据的存放目录</span><br><span class="line">datadir&#x3D;D:&#x2F;mysql-8.1.0-winx64&#x2F;Data</span><br><span class="line">authentication_policy&#x3D;*,,</span><br><span class="line"># 创建新表时将使用的默认存储引擎</span><br><span class="line">default-storage-engine&#x3D;INNODB</span><br><span class="line">sql-mode&#x3D;&quot;ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION&quot;</span><br><span class="line">log-output&#x3D;FILE</span><br><span class="line">general-log&#x3D;0</span><br><span class="line">general_log_file&#x3D;&quot;pubx7b7t4cxywo3.log&quot;</span><br><span class="line">slow-query-log&#x3D;1</span><br><span class="line">slow_query_log_file&#x3D;&quot;pubx7b7t4cxywo3-slow.log&quot;</span><br><span class="line">long_query_time&#x3D;10</span><br><span class="line">log-error&#x3D;&quot;pubx7b7t4cxywo3.err&quot;</span><br><span class="line">log-bin&#x3D;&quot;pubx7b7t4cxywo3-bin&quot;</span><br><span class="line">server-id&#x3D;1</span><br><span class="line"># 是否区分大小写，0区分，1不区分，2存储大小写比较时小写</span><br><span class="line">lower_case_table_names&#x3D;2</span><br><span class="line">secure-file-priv&#x3D;&quot;D:&#x2F;mysql-8.1.0-winx64&#x2F;Uploads&quot;</span><br><span class="line"># 允许最大连接数</span><br><span class="line">max_connections&#x3D;151</span><br><span class="line">table_open_cache&#x3D;4000</span><br><span class="line">temptable_max_ram&#x3D;1G</span><br><span class="line">tmp_table_size&#x3D;54M</span><br><span class="line">internal_tmp_mem_storage_engine&#x3D;TempTable</span><br><span class="line">myisam_max_sort_file_size&#x3D;2146435072</span><br><span class="line">myisam_sort_buffer_size&#x3D;98M</span><br><span class="line">key_buffer_size&#x3D;8M</span><br><span class="line">read_buffer_size&#x3D;128K</span><br><span class="line">read_rnd_buffer_size&#x3D;256K</span><br><span class="line">innodb_flush_log_at_trx_commit&#x3D;1</span><br><span class="line">innodb_log_buffer_size&#x3D;16M</span><br><span class="line">innodb_buffer_pool_size&#x3D;128M</span><br><span class="line">innodb_redo_log_capacity&#x3D;100M</span><br><span class="line">innodb_thread_concurrency&#x3D;9</span><br><span class="line">innodb_autoextend_increment&#x3D;64</span><br><span class="line">innodb_buffer_pool_instances&#x3D;8</span><br><span class="line">innodb_concurrency_tickets&#x3D;5000</span><br><span class="line">innodb_old_blocks_time&#x3D;1000</span><br><span class="line">innodb_stats_on_metadata&#x3D;0</span><br><span class="line">innodb_file_per_table&#x3D;1</span><br><span class="line">innodb_checksum_algorithm&#x3D;0</span><br><span class="line">flush_time&#x3D;0</span><br><span class="line">join_buffer_size&#x3D;256K</span><br><span class="line">max_allowed_packet&#x3D;64M</span><br><span class="line"># 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统</span><br><span class="line">max_connect_errors&#x3D;100</span><br><span class="line">open_files_limit&#x3D;8161</span><br><span class="line">sort_buffer_size&#x3D;256K</span><br><span class="line">binlog_row_event_max_size&#x3D;8K</span><br><span class="line">sync_source_info&#x3D;10000</span><br><span class="line">sync_relay_log&#x3D;10000</span><br><span class="line">sync_relay_log_info&#x3D;10000</span><br><span class="line">loose_mysqlx_port&#x3D;33060</span><br><span class="line"># 服务端使用的字符集默认为utf8mb4</span><br><span class="line">character-set-server&#x3D;utf8mb4</span><br></pre></td></tr></table></figure><h1 id="创建-Uploads-文件夹"><a href="#创建-Uploads-文件夹" class="headerlink" title="创建 Uploads 文件夹"></a>创建 Uploads 文件夹</h1><p>在 D:/mysql-8.1.0-winx64 下创建 Uploads 文件夹</p><h1 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h1><p>在 cmd 内，切换到 D:\mysql-8.1.0-winx64\bin 目录下，然后执行初始化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;d D:\mysql-8.1.0-winx64\bin</span><br><span class="line">mysqld --defaults-file&#x3D;&quot;D:\mysql-8.1.0-winx64\my.ini&quot; --initialize --console</span><br></pre></td></tr></table></figure><p>会在 D:\mysql-8.1.0-winx64 目录下生成 Data 文件夹，注意执行完成后，输出的信息内包含 root 的初始密码</p><h1 id="安装为服务"><a href="#安装为服务" class="headerlink" title="安装为服务"></a>安装为服务</h1><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --install MySQL81</span><br></pre></td></tr></table></figure><p>MySQL81 为服务名，可修改</p><h1 id="如若是本服务器的第二个-Mysql"><a href="#如若是本服务器的第二个-Mysql" class="headerlink" title="如若是本服务器的第二个 Mysql"></a>如若是本服务器的第二个 Mysql</h1><p>如若是本服务器的第二个 Mysql，则需要修改注册表（regedit）\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\MYSQL8 的 imagePath 的值中涉及的路径改为新目录</p><h1 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start MySQL81</span><br></pre></td></tr></table></figure><h1 id="移除服务"><a href="#移除服务" class="headerlink" title="移除服务"></a>移除服务</h1><p>若需要重装可使用移除服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --remove MySQL81</span><br></pre></td></tr></table></figure><h1 id="一台服务器双-mysql"><a href="#一台服务器双-mysql" class="headerlink" title="一台服务器双 mysql"></a>一台服务器双 mysql</h1><h4 id="复制单台的安装文件到新目录"><a href="#复制单台的安装文件到新目录" class="headerlink" title="复制单台的安装文件到新目录"></a>复制单台的安装文件到新目录</h4><h4 id="修改新目录的-my-ini-文件"><a href="#修改新目录的-my-ini-文件" class="headerlink" title="修改新目录的 my.ini 文件"></a>修改新目录的 my.ini 文件</h4><p>1、修改端口 3306 和 33060 为其它<br>2、修改涉及的路径为新目录</p><h4 id="修改注册表"><a href="#修改注册表" class="headerlink" title="修改注册表"></a>修改注册表</h4><p>修改注册表（regedit）\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\MYSQL8 的 imagePath 的值中涉及的路径改为新目录</p><h4 id="其它和单台安装相同"><a href="#其它和单台安装相同" class="headerlink" title="其它和单台安装相同"></a>其它和单台安装相同</h4><h1 id="cmd-内修改-mysql"><a href="#cmd-内修改-mysql" class="headerlink" title="cmd 内修改 mysql"></a>cmd 内修改 mysql</h1><p>登录 MySQL。在命令行终端中输入以下命令，然后按回车键：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -h hostname -P port -u username -p</span><br><span class="line"># mysql -h 127.0.0.1 -P 12301 -u root -p</span><br></pre></td></tr></table></figure><p>其中，hostname 是 MySQL 服务器的主机名或 IP 地址，port 是 MySQL 服务器的端口号，username 是登录 MySQL 的用户名，p 是密码。输入密码时，不会显示密码字符，需要输入后按回车键。注意第一个-P 是大写的 P</p><h1 id="修改加密方式"><a href="#修改加密方式" class="headerlink" title="修改加密方式"></a>修改加密方式</h1><p>为了能让 Navicat 连接，修改加密方式。sql 注意最后的分号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 修改加密方式</span><br><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;password&#39; PASSWORD EXPIRE NEVER; #修改加密规则</span><br><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;password&#39;; #更新一下用户的密码</span><br><span class="line"></span><br><span class="line">FLUSH PRIVILEGES; #刷新权限</span><br><span class="line"></span><br><span class="line"># 修改密码</span><br><span class="line">alter user &#39;root&#39;@&#39;localhost&#39; identified by &#39;123456&#39;;</span><br><span class="line"></span><br><span class="line"># 修改为可其它机器连接</span><br><span class="line">UPDATE mysql.user SET host&#x3D;&#39;%&#39; WHERE User&#x3D;&#39;root&#39;;</span><br></pre></td></tr></table></figure><p>执行完成后，可以重启下 mysql 服务</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h1&gt;&lt;p&gt;下载 Windows (x86, 64-bit), ZIP Archive：&lt;a href=&quot;https://dev.mysql.com/d</summary>
      
    
    
    
    
    <category term="MySQL" scheme="https://xuzengjie.gitee.io/tags/MySQL/"/>
    
    <category term="安装" scheme="https://xuzengjie.gitee.io/tags/%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>69-MySQL</title>
    <link href="https://xuzengjie.gitee.io/archives/a42df153.html"/>
    <id>https://xuzengjie.gitee.io/archives/a42df153.html</id>
    <published>2023-04-24T16:00:00.000Z</published>
    <updated>2023-06-27T00:30:35.812Z</updated>
    
    <content type="html"><![CDATA[<h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><h3 id="查询索引"><a href="#查询索引" class="headerlink" title="查询索引"></a>查询索引</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">INDEX</span> <span class="keyword">FROM</span> 表名;</span><br></pre></td></tr></table></figure><h3 id="添加索引"><a href="#添加索引" class="headerlink" title="添加索引"></a>添加索引</h3><h4 id="主键索引"><a href="#主键索引" class="headerlink" title="主键索引"></a>主键索引</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span> (列名)</span><br></pre></td></tr></table></figure><h4 id="唯一索引"><a href="#唯一索引" class="headerlink" title="唯一索引"></a>唯一索引</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> 索引名 (列名,列名);</span><br></pre></td></tr></table></figure><h4 id="普通索引"><a href="#普通索引" class="headerlink" title="普通索引"></a>普通索引</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> <span class="keyword">INDEX</span> 索引名 (列名,列名);</span><br></pre></td></tr></table></figure><h4 id="全文索引"><a href="#全文索引" class="headerlink" title="全文索引"></a>全文索引</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> FULLTEXT 索引名 (列名,列名);</span><br></pre></td></tr></table></figure><h3 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> 索引名 <span class="keyword">ON</span> 表名;</span><br></pre></td></tr></table></figure><h3 id="数据库备份"><a href="#数据库备份" class="headerlink" title="数据库备份"></a>数据库备份</h3><p>保存为 BAT 文件，通过系统计划任务进行备份</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">echo 设置MySql数据库的连接信息</span><br><span class="line">set host&#x3D;127.0.0.1</span><br><span class="line">set port&#x3D;3306</span><br><span class="line">set user&#x3D;mes</span><br><span class="line">set pass&#x3D;mes@123!</span><br><span class="line">echo 设置要备份MySql数据库名称</span><br><span class="line">set dbname&#x3D;mes</span><br><span class="line">echo 获取当天的日期格式，例如：2022-12-13-14-30-40</span><br><span class="line"></span><br><span class="line">set t&#x3D;%time:~0,8%</span><br><span class="line">set mt&#x3D;%t: &#x3D;0%</span><br><span class="line"></span><br><span class="line">set backup_date&#x3D;%date:~0,4%-%date:~5,2%-%date:~8,2%-%mt:~0,2%-%time:~3,2%-%time:~6,2%</span><br><span class="line">echo 设置备份文件的路径 %backup_date%</span><br><span class="line">set backupfile&#x3D;D:\HSU_MES\DB\%dbname%-%backup_date%.sql</span><br><span class="line">echo 使用mysqldump对指定的MySql进行备份</span><br><span class="line">echo 注意路径中有空格的要加上双引号</span><br><span class="line">&quot;C:\Program Files\MySQL\MySQL Server 8.0\bin\mysqldump&quot; -h%host% -P%port% -u%user% -p%pass% -c --add-drop-table %dbname% &gt; %backupfile%</span><br><span class="line">echo 删除过期文件，这里是超过30天就删除</span><br><span class="line">forfiles &#x2F;p D:\HSU_MES\DB\ &#x2F;s &#x2F;m *.sql &#x2F;d -30 &#x2F;c &quot;cmd &#x2F;c del @file &#x2F;f&quot;</span><br><span class="line">exist</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;索引&quot;&gt;&lt;a href=&quot;#索引&quot; class=&quot;headerlink&quot; title=&quot;索引&quot;&gt;&lt;/a&gt;索引&lt;/h1&gt;&lt;h3 id=&quot;查询索引&quot;&gt;&lt;a href=&quot;#查询索引&quot; class=&quot;headerlink&quot; title=&quot;查询索引&quot;&gt;&lt;/a&gt;查询索引&lt;/h</summary>
      
    
    
    
    
    <category term="MySQL" scheme="https://xuzengjie.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>68-网页获取域账号</title>
    <link href="https://xuzengjie.gitee.io/archives/d83eaa29.html"/>
    <id>https://xuzengjie.gitee.io/archives/d83eaa29.html</id>
    <published>2023-04-11T16:00:00.000Z</published>
    <updated>2023-04-21T01:15:05.193Z</updated>
    
    <content type="html"><![CDATA[<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>1、服务器要登录域 PC<br>2、客户端要登录域 PC<br>3、需要不带点的域名，可用服务器的计算机名当域名，<br>如 <a href="http://hsudc2sv:9010/">http://hsudc2sv:9010/</a> 可以，<a href="http://192.168.152.3:9010/">http://192.168.152.3:9010/</a> 不可以<br>或把域名加入客户端的“本地 Intranet”内<br>4、web 服务若要注册为 windows 服务，登录为”本地系统”</p><h1 id="Program-cs-关键代码"><a href="#Program-cs-关键代码" class="headerlink" title="Program.cs 关键代码"></a>Program.cs 关键代码</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Authentication.Negotiate;</span><br><span class="line"></span><br><span class="line">builder.Services.AddAuthentication(NegotiateDefaults.AuthenticationScheme)</span><br><span class="line">   .AddNegotiate();</span><br><span class="line"></span><br><span class="line">builder.Services.AddAuthorization(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// By default, all incoming requests will be authorized according to the default policy.</span></span><br><span class="line">    options.FallbackPolicy = options.DefaultPolicy;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="相关截图"><a href="#相关截图" class="headerlink" title="相关截图"></a>相关截图</h1><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p><img src="/archives/d83eaa29/1.png" alt="1"></p><h3 id="Program-cs-完整代码"><a href="#Program-cs-完整代码" class="headerlink" title="Program.cs 完整代码"></a>Program.cs 完整代码</h3><p><img src="/archives/d83eaa29/2.png" alt="21"></p><h3 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h3><p><img src="/archives/d83eaa29/3.png" alt="3"></p><h3 id="代码配置禁用匿名身份验证，启用-windows-身份验证"><a href="#代码配置禁用匿名身份验证，启用-windows-身份验证" class="headerlink" title="代码配置禁用匿名身份验证，启用 windows 身份验证"></a>代码配置禁用匿名身份验证，启用 windows 身份验证</h3><p>该处也可在 IIS–身份验证内修改</p><p><img src="/archives/d83eaa29/4.png" alt="4"></p><h1 id="其它方式"><a href="#其它方式" class="headerlink" title="其它方式"></a>其它方式</h1><p>可在创建项目时，身份验证类型选择 windows，这样相关的代码均已存在<br><img src="/archives/d83eaa29/5.png" alt="5"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h1&gt;&lt;p&gt;1、服务器要登录域 PC&lt;br&gt;2、客户端要登录域 PC&lt;br&gt;3、需要不带点的域名，可用服务器的计算机名当域名，&lt;br&gt;如</summary>
      
    
    
    
    
    <category term="域账户" scheme="https://xuzengjie.gitee.io/tags/%E5%9F%9F%E8%B4%A6%E6%88%B7/"/>
    
  </entry>
  
  <entry>
    <title>67-webAPI注册为服务</title>
    <link href="https://xuzengjie.gitee.io/archives/49205ab4.html"/>
    <id>https://xuzengjie.gitee.io/archives/49205ab4.html</id>
    <published>2023-03-27T16:00:00.000Z</published>
    <updated>2023-04-21T01:14:13.623Z</updated>
    
    <content type="html"><![CDATA[<h1 id="修改-webapi-端口从配置文件读取"><a href="#修改-webapi-端口从配置文件读取" class="headerlink" title="修改 webapi 端口从配置文件读取"></a>修改 webapi 端口从配置文件读取</h1><p>program.cs</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> builder = WebApplication.CreateBuilder(args);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> configuration = builder.Configuration;</span><br><span class="line">builder.Host.UseWindowsService();</span><br><span class="line">builder.WebHost.ConfigureKestrel(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//Http端口</span></span><br><span class="line">    options.ListenAnyIP(configuration.GetSection(<span class="string">&quot;Host:HttpPort&quot;</span>).Get&lt;<span class="keyword">int</span>&gt;());</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>appsettings.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;Host&quot;</span>: &#123;</span><br><span class="line"><span class="attr">&quot;HttpPort&quot;</span>: <span class="number">9010</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="批处理文件注册程序为服务-管理员权限运行"><a href="#批处理文件注册程序为服务-管理员权限运行" class="headerlink" title="批处理文件注册程序为服务(管理员权限运行)"></a>批处理文件注册程序为服务(管理员权限运行)</h1><p>start.bat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">set serviceName&#x3D;XZJBackManageWebApi9301</span><br><span class="line">set serviceFilePath&#x3D;&quot;D:\HSU_MES\WebAPi\9301\XZJ.BackManage.WebApi.exe&quot;</span><br><span class="line">set serviceDescription&#x3D;&quot;XZJBackManageWebApi9301&quot;</span><br><span class="line"></span><br><span class="line">sc create %serviceName%  BinPath&#x3D;%serviceFilePath%</span><br><span class="line">sc config %serviceName%    start&#x3D;auto</span><br><span class="line">sc config %serviceName%    start&#x3D;delayed-auto</span><br><span class="line">sc description %serviceName%  %serviceDescription%</span><br><span class="line">sc failure %serviceName%  reset&#x3D; 0 actions&#x3D; restart&#x2F;1200000</span><br><span class="line">sc start  %serviceName%</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><h1 id="批处理文件卸载服务-管理员权限运行"><a href="#批处理文件卸载服务-管理员权限运行" class="headerlink" title="批处理文件卸载服务(管理员权限运行)"></a>批处理文件卸载服务(管理员权限运行)</h1><p>end.bat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">set serviceName&#x3D;XZJBackManageWebApi9301</span><br><span class="line">sc stop   %serviceName%</span><br><span class="line">sc delete %serviceName%</span><br><span class="line">pause</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="修改服务权限"><a href="#修改服务权限" class="headerlink" title="修改服务权限"></a>修改服务权限</h1><p>在控制面板-服务内，找到对应服务，右键属性–登录标签页，输入相关账号密码<br><img src="/archives/49205ab4/1.png" alt="1"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;修改-webapi-端口从配置文件读取&quot;&gt;&lt;a href=&quot;#修改-webapi-端口从配置文件读取&quot; class=&quot;headerlink&quot; title=&quot;修改 webapi 端口从配置文件读取&quot;&gt;&lt;/a&gt;修改 webapi 端口从配置文件读取&lt;/h1&gt;&lt;p&gt;pr</summary>
      
    
    
    
    
    <category term="服务" scheme="https://xuzengjie.gitee.io/tags/%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="webAPI" scheme="https://xuzengjie.gitee.io/tags/webAPI/"/>
    
  </entry>
  
  <entry>
    <title>66-身份认证</title>
    <link href="https://xuzengjie.gitee.io/archives/72f160ce.html"/>
    <id>https://xuzengjie.gitee.io/archives/72f160ce.html</id>
    <published>2023-03-02T16:00:00.000Z</published>
    <updated>2023-03-28T01:49:52.611Z</updated>
    
    <content type="html"><![CDATA[<h1 id="登录模式"><a href="#登录模式" class="headerlink" title="登录模式"></a>登录模式</h1><h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><p>我们登录认证成功之后，将用户信息就存放在服务端(Session)，然后将其对应的 session_id 存储在客户端(Cookie)，从 Cookie 中取出 session_id，服务端就可以根据这个 session_id 获取对应的 Session，从而获取存储用户信息。</p><p>优点是：Session 自动续期，用户体验较好<br>缺点是：</p><ol><li>没有分布式架构，无法支持横向扩展。即分布式架构的情况下，其他服务器是没有办法获取到用户信息的。当然，可以使用 Session 共享的方式来解决这个问题。或者，可以将用户信息存储在 Redis 里，用一个透明令牌(字符串)作为 key，并把这个令牌存储到本地(cookie、localStorage)，然后通过令牌去 Redis 取用户信息。</li><li>Session 依赖 Cookie，如果客户端禁用了 Cookie，那么 Session 无法正常工作。其解决方法就是，可以在请求的 url 后面拼接上 session_id，如：<a href="http://www.liuchengyin.com/test?session_id=xxx%EF%BC%8C%E5%85%B6%E5%AE%89%E5%85%A8%E6%80%A7%E5%92%8C%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C%E6%84%9F%E8%BE%83%E5%B7%AE%E3%80%82">http://www.liuchengyin.com/test?session_id=xxx，其安全性和用户体验感较差。</a></li><li>Session 依赖 Cookie，Cookie 无法防止 CSRF(Cross Site Request Forgery)：跨站请求伪造。Session 认证中，Cookie 是通过浏览器发送到服务端的，借助这个特性，攻击者可以通过让用户误点攻击连接(攻击者通过 cookie 拿到你的 session_id 就可以代替你的身份访问系统)达到攻击效果。</li></ol><h2 id="SSO-单点登录"><a href="#SSO-单点登录" class="headerlink" title="SSO (单点登录)"></a>SSO (单点登录)</h2><p>用户只需要在身份认证服务器上登录一次，就可以访问这个单点登录中其他关联系统的应用软件的权限，同时这种实现是不需要管理员对用户登录状态或其他信息进行修改的，这意味着多个应用系统中，用户只需一次登录就可以访问所有相互信任的应用系统。</p><p>优点：用户身份信息独立管理，可以更好的分布式管理，可以自己扩展安全策略。<br>缺点：认证服务器访问压力会比较大</p><h2 id="Token"><a href="#Token" class="headerlink" title="Token"></a>Token</h2><p>Token 是一种无状态、跨服务器、高性能的验证模式。用户通过用户名和密码发送请求，程序进行验证，验证通过后返回一个签名的 token 给客户端存储(一般 localStorage)，客户端每次请求都会附带上这个 token(一般在 Header 里附带 token)，服务端验证这个 token 之后将数据返回。</p><p>优点：无状态、可扩展、支持移动设备、可跨程序调用、安全，基于标准化，你的 API 考研采用标准化的 JSON Web Token(JWT)<br>缺点：占用宽带且无法在服务端进行销毁(可以在服务器端增加黑名单禁用)</p><h1 id="JWT-令牌的身份验证"><a href="#JWT-令牌的身份验证" class="headerlink" title="JWT 令牌的身份验证"></a>JWT 令牌的身份验证</h1><p>1、JWT 是什么？<br>JSON Web Token（JWT）是一个开放的行业标准(RFC 7519)，它定义了一种简介的、自包含的协议格式，用于在通信双方传递 JSON 对象，传递的信息经过数字签名可以被验证和信任。JWT 可以使用 HMAC 算法或使用 RSA 的公钥/私钥对来签名，防止被篡改。对普通信息进行加密处理后转换成 JSON，转换过后的数据称为 Token。</p><p>2、JWT 能做什么？</p><ol><li>授权：一旦用户登录，每个后续请求将包括 JWT，从而允许用户访问该令牌允许的路由、服务和资源。登录成功之后，生产一个 JWT，其中包含用户的信息。</li><li>信息交换：可以在各方之间安全的传输信息。</li></ol><p>3、JWT 认证和 Session 认证的区别</p><ol><li>Session 认证<br>通过账户密码验证之后，将用户信息保存在 Session。Session 是保存在服务端的，下一次通过 Cookie 存储的 session_id 去 Session 当中取数据。</li><li>JWT 认证<br>通过账户密码验证之后，将用户信息转换成 JWT，以 Token 令牌的形式传给前端，前端将其存储到 Cookie 中(JWT 是保存在客户端的)，以后每一次请求都会带上这个 token，服务器获取到这个 token 之后进行 JWT 解析来读取用户数据，如果没有数据就代表没有登录。</li></ol><p>4、JWT 有哪些优缺点<br>优点：基于 JSON，方便解析，可以在令牌中自定义丰富内容，易扩展。通过非对称加密及数字签名技术，可以防止篡改、安全性高。可以不依赖认证服务就可以完成授权。<br>缺点：</p><ol><li>JWT 令牌较长，占存储空间比较大。</li><li>JWT 加密后的 Token 可在<a href="https://jwt.io/">网站</a>解密</li></ol><p>5、JWT 的结构<br>JWT 令牌由三部分组成，每部分中间使用点（.）分隔,比如：xxxxx.yyyyy.zzzzz</p><ol><li>Header<br>JWT 头部分是一个描述 JWT 元数据的 JSON 对象，头部包括令牌的类型（即 JWT）及使用的哈希算法（如 HMAC SHA256 或 RSA）。</li><li>Payload<br>第二部分是负载，内容也是一个 JSON 对象，通过 Base64Url 编码，得到一个字符串，这个字符串就是 JWT 的第二部分(负载)。<br>它指定了七个默认字段供选择。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">iss：发行人</span><br><span class="line">exp：到期时间</span><br><span class="line">sub：主体</span><br><span class="line">aud：用户</span><br><span class="line">nbf：在此之前不可用</span><br><span class="line">iat：发布时间</span><br><span class="line">jti：JWT ID用于标识该JWT</span><br></pre></td></tr></table></figure><p>除了这七个默认字段，还可以自定义私有字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;user&quot;: &quot;xxx&quot;,</span><br><span class="line">&quot;name&quot;: &quot;张三&quot;,</span><br><span class="line">&quot;admin&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是不建议在此部分存放敏感信息，此部门可以解码还原原始内容。虽然它可以解码，但是也不能修改这个内容。</p><ol start="3"><li>Signature<br>第三部分是签名哈希部分，是对上面两部分数据签名，通过指定的算法生成哈希，以确保数据不会被篡改。首先，需要指定一个密码（secret）。该密码仅仅为保存在服务器中，并且不能向用户公开。然后，使用标头中指定的签名算法（默认情况下为 HMAC SHA256）根据以下公式生成签名。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HMACSHA256(</span><br><span class="line">base64UrlEncode(header) + &quot;.&quot; +base64UrlEncode(payload),secret</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h1 id="Token-认证在实际使用中的一些问题"><a href="#Token-认证在实际使用中的一些问题" class="headerlink" title="Token 认证在实际使用中的一些问题"></a>Token 认证在实际使用中的一些问题</h1><p>1、下列情况，token 依然有效<br>注销、修改密码、修改用户的权限、角色、用户账号被删除、用户被注销。</p><ol><li>Token 一旦被发出，是没有办法销毁的，只能等到它过期。如果想要其失效，可以将 token 存储在缓存中，服务端每次请求都要验证 token 是否存在，在上述情况的逻辑里要去 Redis 删除对应的 token，但是这违背了 Token 无状态的原则。</li><li>为每个用户提供专属的 token，要让 token 失效直接删除 token 即可。但是这种方式危害极大，分布式情况下每次发送新的 token 都需要在多台服务器同步。如果用户同时在两个浏览器打开系统，那么一个地方退出登录，其他地方都要重新进行登录。</li><li>让 token 保持短暂时间，但是这种需要频繁登录。</li></ol><p>2、token 续签问题</p><ol><li>可以每次请求的时候在服务端检查，如果发现快要过期了，就发个新 token 给浏览器，浏览器每次都要检查新旧 token 是否一致。不一致，就替换为新的 token。但是这个缺点也很大，只有在快要过期的时候那一次请求才会更新 token，对客户端也不友好。</li><li>基于第一种，可以每次请求都更新 token，但这样开销太大了。</li><li>token 时间设置长一点，这仅适用于安全性不高的系统。</li><li>服务端返回两个 token，accessToken 为真实 token(过期时间假设为 30min)，refreshToken 为过期时间 token(过期时间假设为 1 天)。登录就把这两个 token 保存在客户端，每次访问传递 accessToken，如果服务端检测到 accessToken 过期，就将 refreshToken 传给服务端，服务端创建一个新的 accessToken 返回个客户端保存。其缺点：需要客户端配合，用户注销需要两个 token 都要失效，重新请求获取 token 的过程中会有短暂 token 不可用。</li></ol><h1 id="简单自定义-Token"><a href="#简单自定义-Token" class="headerlink" title="简单自定义 Token"></a>简单自定义 Token</h1><p>对账号+密码进行不可逆加密生成 Token，每次访问时，对账号+密码进行加密与 Token 进行校验</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;登录模式&quot;&gt;&lt;a href=&quot;#登录模式&quot; class=&quot;headerlink&quot; title=&quot;登录模式&quot;&gt;&lt;/a&gt;登录模式&lt;/h1&gt;&lt;h2 id=&quot;Session&quot;&gt;&lt;a href=&quot;#Session&quot; class=&quot;headerlink&quot; title=&quot;Ses</summary>
      
    
    
    
    
    <category term="JWT" scheme="https://xuzengjie.gitee.io/tags/JWT/"/>
    
    <category term="Token" scheme="https://xuzengjie.gitee.io/tags/Token/"/>
    
    <category term="Session" scheme="https://xuzengjie.gitee.io/tags/Session/"/>
    
    <category term="Cookie" scheme="https://xuzengjie.gitee.io/tags/Cookie/"/>
    
    <category term="SSO" scheme="https://xuzengjie.gitee.io/tags/SSO/"/>
    
  </entry>
  
  <entry>
    <title>65-JS数组删除</title>
    <link href="https://xuzengjie.gitee.io/archives/fa9e027f.html"/>
    <id>https://xuzengjie.gitee.io/archives/fa9e027f.html</id>
    <published>2023-02-01T16:00:00.000Z</published>
    <updated>2023-02-02T03:30:32.808Z</updated>
    
    <content type="html"><![CDATA[<p>js 删除数组中某一项或几项的几种方法</p><h1 id="一、删除第一个元素"><a href="#一、删除第一个元素" class="headerlink" title="一、删除第一个元素"></a>一、删除第一个元素</h1><h3 id="1、shift-方法用于把数组的第一个元素从其中删除，并返回第一个元素的值。"><a href="#1、shift-方法用于把数组的第一个元素从其中删除，并返回第一个元素的值。" class="headerlink" title="1、shift() 方法用于把数组的第一个元素从其中删除，并返回第一个元素的值。"></a>1、shift() 方法用于把数组的第一个元素从其中删除，并返回第一个元素的值。</h3><p>注意： 此方法改变数组的长度！</p><p>提示: 移除数组末尾的元素可以使用 pop() 方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">arr.shift() <span class="comment">// 1</span></span><br><span class="line"><span class="comment">// arr =&gt; [2,3,4,5]</span></span><br></pre></td></tr></table></figure><h3 id="2、slice-方法可从已有的数组中返回选定的元素。"><a href="#2、slice-方法可从已有的数组中返回选定的元素。" class="headerlink" title="2、slice() 方法可从已有的数组中返回选定的元素。"></a>2、slice() 方法可从已有的数组中返回选定的元素。</h3><p>slice() 方法可提取字符串的某个部分，并以新的字符串返回被提取的部分。</p><p>注意： slice() 方法不会改变原始数组。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="keyword">let</span> newArr = arr.slice(<span class="number">1</span>)</span><br><span class="line"><span class="comment">// arr =&gt; [1,2,3,4,5]</span></span><br><span class="line"><span class="comment">// newArr =&gt; [2,3,4,5]</span></span><br></pre></td></tr></table></figure><h3 id="3、splice-方法用于添加或删除数组中的元素。"><a href="#3、splice-方法用于添加或删除数组中的元素。" class="headerlink" title="3、splice() 方法用于添加或删除数组中的元素。"></a>3、splice() 方法用于添加或删除数组中的元素。</h3><p>注意：这种方法会改变原始数组。</p><p>返回值<br>如果删除一个元素，则返回一个元素的数组。 如果未删除任何元素，则返回空数组。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="keyword">let</span> newArr = arr.splice(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line"><span class="comment">// arr =&gt; [2,3,4,5]</span></span><br><span class="line"><span class="comment">// newArr =&gt; [1]</span></span><br></pre></td></tr></table></figure><h1 id="二、删除最后一个元素"><a href="#二、删除最后一个元素" class="headerlink" title="二、删除最后一个元素"></a>二、删除最后一个元素</h1><h3 id="1、pop-方法用于删除数组的最后一个元素并返回删除的元素。"><a href="#1、pop-方法用于删除数组的最后一个元素并返回删除的元素。" class="headerlink" title="1、pop() 方法用于删除数组的最后一个元素并返回删除的元素。"></a>1、pop() 方法用于删除数组的最后一个元素并返回删除的元素。</h3><p>注意：此方法改变数组的长度！</p><p>提示： 移除数组第一个元素，请使用 shift() 方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">arr.pop() <span class="comment">// 5</span></span><br><span class="line"><span class="comment">// arr =&gt; [1,2,3,4]</span></span><br></pre></td></tr></table></figure><h3 id="2、slice-方法"><a href="#2、slice-方法" class="headerlink" title="2、slice() 方法"></a>2、slice() 方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="keyword">let</span> newArr = arr.slice(<span class="number">0</span>, arr.length - <span class="number">1</span>)</span><br><span class="line"><span class="comment">// arr =&gt; [1,2,3,4,5]</span></span><br><span class="line"><span class="comment">// newArr =&gt; [1,2,3,4]</span></span><br></pre></td></tr></table></figure><h3 id="3、-splice-方法用于添加或删除数组中的元素。"><a href="#3、-splice-方法用于添加或删除数组中的元素。" class="headerlink" title="3、 splice() 方法用于添加或删除数组中的元素。"></a>3、 splice() 方法用于添加或删除数组中的元素。</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="keyword">let</span> newArr = arr.splice(arr.length - <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"><span class="comment">// arr =&gt; [1,2,3,4]</span></span><br><span class="line"><span class="comment">// newArr =&gt; [5]</span></span><br></pre></td></tr></table></figure><h1 id="三、删除数组中某个指定下标的元素"><a href="#三、删除数组中某个指定下标的元素" class="headerlink" title="三、删除数组中某个指定下标的元素"></a>三、删除数组中某个指定下标的元素</h1><h3 id="1、splice-删除"><a href="#1、splice-删除" class="headerlink" title="1、splice 删除"></a>1、splice 删除</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> index = <span class="number">3</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">arr.splice(index, <span class="number">1</span>) <span class="comment">// [4]</span></span><br><span class="line"><span class="comment">// arr =&gt; [1,2,3,5]</span></span><br></pre></td></tr></table></figure><h3 id="2、for-循环删除"><a href="#2、for-循环删除" class="headerlink" title="2、for 循环删除"></a>2、for 循环删除</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> index = <span class="number">3</span>, <span class="comment">// 删除的 id</span></span><br><span class="line">arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>],</span><br><span class="line">arrLen = arr.length,</span><br><span class="line">newArr = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arrLen; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i !== index) &#123;</span><br><span class="line">newArr.push(arr[i])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// arr =&gt; [1,2,3,4,5]</span></span><br><span class="line"><span class="comment">// newArr =&gt; [1,2,3,5]</span></span><br></pre></td></tr></table></figure><h3 id="3、delete-删除"><a href="#3、delete-删除" class="headerlink" title="3、delete 删除"></a>3、delete 删除</h3><p>JavaScript 提供了一个 delete 关键字用来删除（清除）数组元素。</p><p>要注意的是，使用 delete 删除元素之后数组长度不变，只是被删除元素被置为 empty 了。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> index = <span class="number">3</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="keyword">delete</span> arr[index]</span><br><span class="line"><span class="comment">// arr = &gt; [1, 2, 3, empty, 5]</span></span><br></pre></td></tr></table></figure><h1 id="四、删除数组中某个指定元素"><a href="#四、删除数组中某个指定元素" class="headerlink" title="四、删除数组中某个指定元素"></a>四、删除数组中某个指定元素</h1><h3 id="1、splice-删除-1"><a href="#1、splice-删除-1" class="headerlink" title="1、splice 删除"></a>1、splice 删除</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> value = <span class="string">&#x27;b&#x27;</span>,</span><br><span class="line">arr = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>]</span><br><span class="line"></span><br><span class="line">arr.splice(arr.indexOf(value), <span class="number">1</span>) <span class="comment">// [&#x27;b&#x27;]</span></span><br><span class="line"><span class="comment">// arr =&gt; [&#x27;a&#x27;,&#x27;c&#x27;,&#x27;d&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="2、filter-删除"><a href="#2、filter-删除" class="headerlink" title="2、filter 删除"></a>2、filter 删除</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>],</span><br><span class="line">value = <span class="string">&#x27;b&#x27;</span></span><br><span class="line"></span><br><span class="line">arr = arr.filter(<span class="function"><span class="params">item</span> =&gt;</span> item != value)</span><br><span class="line"><span class="comment">// arr =&gt; [&#x27;a&#x27;,&#x27;c&#x27;,&#x27;d&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="3、for-删除"><a href="#3、for-删除" class="headerlink" title="3、for 删除"></a>3、for 删除</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> value = <span class="string">&#x27;b&#x27;</span>,</span><br><span class="line">arr = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>],</span><br><span class="line">arrLen = arr.length,</span><br><span class="line">newArr = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arrLen; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[i] !== value) &#123;</span><br><span class="line">newArr.push(arr[i])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其他 forEach、map、for of 循环同理</p><h3 id="4、Set-删除"><a href="#4、Set-删除" class="headerlink" title="4、Set 删除"></a>4、Set 删除</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>],</span><br><span class="line">value = <span class="string">&#x27;b&#x27;</span></span><br><span class="line"><span class="keyword">let</span> newSet = <span class="keyword">new</span> <span class="built_in">Set</span>(arr)</span><br><span class="line">newSet.delete(value)</span><br><span class="line"><span class="keyword">let</span> newArr = [...newSet]</span><br><span class="line"><span class="comment">// newArr =&gt; [&#x27;a&#x27;,&#x27;c&#x27;,&#x27;d&#x27;]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;js 删除数组中某一项或几项的几种方法&lt;/p&gt;
&lt;h1 id=&quot;一、删除第一个元素&quot;&gt;&lt;a href=&quot;#一、删除第一个元素&quot; class=&quot;headerlink&quot; title=&quot;一、删除第一个元素&quot;&gt;&lt;/a&gt;一、删除第一个元素&lt;/h1&gt;&lt;h3 id=&quot;1、shift-方法</summary>
      
    
    
    
    
    <category term="JS" scheme="https://xuzengjie.gitee.io/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>64-Google插件</title>
    <link href="https://xuzengjie.gitee.io/archives/d16f2002.html"/>
    <id>https://xuzengjie.gitee.io/archives/d16f2002.html</id>
    <published>2023-01-03T16:00:00.000Z</published>
    <updated>2023-01-05T03:46:45.122Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p>书签项目地址： <a href="https://gitee.com/xuzengjie/book-mark-sync">https://gitee.com/xuzengjie/book-mark-sync</a></p><h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><p>谷歌浏览器打开 chrome://extensions/ ，开启开发者模式，点击”加载已解压的扩展程序”,选中书签项目源码路径即可。</p><h1 id="更新项目"><a href="#更新项目" class="headerlink" title="更新项目"></a>更新项目</h1><p>开发过程中，可用直接更新源码后，在扩展程序界面，点击刷新即可<br>(F5 刷新调试界面似乎也是可以的)<br><img src="/archives/d16f2002/1.png" alt="1"></p><h1 id="调试项目"><a href="#调试项目" class="headerlink" title="调试项目"></a>调试项目</h1><p>chrome-extension://项目 ID/popup.html<br>例：chrome-extension://hceaeddpkeidodfbmjmcnilccgikmkda/popup.html<br>项目 ID 在扩展程序界面可以看到（需开启开发者模式）</p><h1 id="谷歌书签"><a href="#谷歌书签" class="headerlink" title="谷歌书签"></a>谷歌书签</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bookMarks = chrome.bookmarks</span><br></pre></td></tr></table></figure><p>参考： <a href="https://developer.mozilla.org/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/bookmarks">https://developer.mozilla.org/zh-CN/docs/Mozilla/Add-ons/WebExtensions/API/bookmarks</a></p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>manifest.json 内<br>manifest_version 为 3，版本 2 的已快被舍弃<br>permissions 为需要的权限<br>background service_worker 为服务工作者，暂时还不知道怎么用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;manifest_version&quot;</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.0.3&quot;</span>,</span><br><span class="line"><span class="string">&quot;name&quot;</span>: <span class="string">&quot;BookMarkSync&quot;</span>,</span><br><span class="line"><span class="string">&quot;description&quot;</span>: <span class="string">&quot;书签同步&quot;</span>,</span><br><span class="line"><span class="string">&quot;icons&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;16&quot;</span>: <span class="string">&quot;images/icon.png&quot;</span>,</span><br><span class="line"><span class="string">&quot;32&quot;</span>: <span class="string">&quot;images/icon.png&quot;</span>,</span><br><span class="line"><span class="string">&quot;48&quot;</span>: <span class="string">&quot;images/icon.png&quot;</span>,</span><br><span class="line"><span class="string">&quot;128&quot;</span>: <span class="string">&quot;images/icon.png&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;action&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;default_popup&quot;</span>: <span class="string">&quot;popup.html&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;permissions&quot;</span>: [</span><br><span class="line"><span class="string">&quot;storage&quot;</span>,</span><br><span class="line"><span class="string">&quot;activeTab&quot;</span>,</span><br><span class="line"><span class="string">&quot;tabs&quot;</span>,</span><br><span class="line"><span class="string">&quot;notifications&quot;</span>,</span><br><span class="line"><span class="string">&quot;bookmarks&quot;</span>,</span><br><span class="line"><span class="string">&quot;scripting&quot;</span></span><br><span class="line">],</span><br><span class="line"><span class="string">&quot;background&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;service_worker&quot;</span>: <span class="string">&quot;background.js&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;homepage_url&quot;</span>: <span class="string">&quot;https://xuzengjie.gitee.io/&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;项目地址&quot;&gt;&lt;a href=&quot;#项目地址&quot; class=&quot;headerlink&quot; title=&quot;项目地址&quot;&gt;&lt;/a&gt;项目地址&lt;/h1&gt;&lt;p&gt;书签项目地址： &lt;a href=&quot;https://gitee.com/xuzengjie/book-mark-sync&quot;&gt;h</summary>
      
    
    
    
    
    <category term="浏览器" scheme="https://xuzengjie.gitee.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
    <category term="插件" scheme="https://xuzengjie.gitee.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>63-Vue项目初始</title>
    <link href="https://xuzengjie.gitee.io/archives/afd9e000.html"/>
    <id>https://xuzengjie.gitee.io/archives/afd9e000.html</id>
    <published>2022-12-15T16:00:00.000Z</published>
    <updated>2023-01-05T05:19:36.538Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vite-初始化项目"><a href="#Vite-初始化项目" class="headerlink" title="Vite 初始化项目"></a>Vite 初始化项目</h1><p>npm init vite@latest xzj.admin</p><h1 id="vscode-工作区推荐插件"><a href="#vscode-工作区推荐插件" class="headerlink" title="vscode 工作区推荐插件"></a>vscode 工作区推荐插件</h1><p>@recommended</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vite-初始化项目&quot;&gt;&lt;a href=&quot;#Vite-初始化项目&quot; class=&quot;headerlink&quot; title=&quot;Vite 初始化项目&quot;&gt;&lt;/a&gt;Vite 初始化项目&lt;/h1&gt;&lt;p&gt;npm init vite@latest xzj.admin&lt;/p&gt;
&lt;h1</summary>
      
    
    
    
    
    <category term="Vue" scheme="https://xuzengjie.gitee.io/tags/Vue/"/>
    
    <category term="初始" scheme="https://xuzengjie.gitee.io/tags/%E5%88%9D%E5%A7%8B/"/>
    
  </entry>
  
  <entry>
    <title>62-NPM</title>
    <link href="https://xuzengjie.gitee.io/archives/228a19a5.html"/>
    <id>https://xuzengjie.gitee.io/archives/228a19a5.html</id>
    <published>2022-12-14T16:00:00.000Z</published>
    <updated>2022-12-16T09:01:18.341Z</updated>
    
    <content type="html"><![CDATA[<h1 id="查看全局的包"><a href="#查看全局的包" class="headerlink" title="查看全局的包"></a>查看全局的包</h1><p>npm -g list<br><img src="/archives/228a19a5/1.png" alt="1"></p><h1 id="查看全局可更新的包"><a href="#查看全局可更新的包" class="headerlink" title="查看全局可更新的包"></a>查看全局可更新的包</h1><p>npm outdated -g</p><h1 id="更新全局的包"><a href="#更新全局的包" class="headerlink" title="更新全局的包"></a>更新全局的包</h1><p>npm update -g</p><h1 id="更新特定的全局包"><a href="#更新特定的全局包" class="headerlink" title="更新特定的全局包"></a>更新特定的全局包</h1><p>npm update -g <package_name></package_name></p><h1 id="查看特定的所有版本"><a href="#查看特定的所有版本" class="headerlink" title="查看特定的所有版本"></a>查看特定的所有版本</h1><p>pnpm info vue-router versions</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;查看全局的包&quot;&gt;&lt;a href=&quot;#查看全局的包&quot; class=&quot;headerlink&quot; title=&quot;查看全局的包&quot;&gt;&lt;/a&gt;查看全局的包&lt;/h1&gt;&lt;p&gt;npm -g list&lt;br&gt;&lt;img src=&quot;/archives/228a19a5/1.png&quot; alt</summary>
      
    
    
    
    
    <category term="npm" scheme="https://xuzengjie.gitee.io/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>61-IIS错误处理</title>
    <link href="https://xuzengjie.gitee.io/archives/e78b64e5.html"/>
    <id>https://xuzengjie.gitee.io/archives/e78b64e5.html</id>
    <published>2022-11-30T16:00:00.000Z</published>
    <updated>2022-12-02T08:12:05.866Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PUT报405-Error-Method-Not-Allowed错误"><a href="#PUT报405-Error-Method-Not-Allowed错误" class="headerlink" title="PUT报405 Error: Method Not Allowed错误"></a>PUT报405 Error: Method Not Allowed错误</h1><p>IIS中的WebDAV导致的。<br><img src="/archives/e78b64e5/1.png" alt="1"><br><img src="/archives/e78b64e5/2.png" alt="2"></p><h4 id="解决方案1：卸载IIS中的WebDAV"><a href="#解决方案1：卸载IIS中的WebDAV" class="headerlink" title="解决方案1：卸载IIS中的WebDAV"></a>解决方案1：卸载IIS中的WebDAV</h4><p>取消勾选WebDAV发布<br><img src="/archives/e78b64e5/4.png" alt="4"></p><h4 id="解决方案2：Web-config文件中添加配置"><a href="#解决方案2：Web-config文件中添加配置" class="headerlink" title="解决方案2：Web.config文件中添加配置"></a>解决方案2：Web.config文件中添加配置</h4><p>在 &lt;system.webServer&gt; 节点下新增</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;modules runAllManagedModulesForAllRequests=<span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">remove</span> name=<span class="string">&quot;WebDAVModule&quot;</span> /&gt;</span><br><span class="line">&lt;/modules&gt;</span><br></pre></td></tr></table></figure><p><img src="/archives/e78b64e5/5.png" alt="5"></p><h1 id="报引荐来源网址政策-strict-origin-when-cross-origin"><a href="#报引荐来源网址政策-strict-origin-when-cross-origin" class="headerlink" title="报引荐来源网址政策: strict-origin-when-cross-origin"></a>报引荐来源网址政策: strict-origin-when-cross-origin</h1><p><strong>浏览器</strong>同源策略，跨域访问导致的。<br><img src="/archives/e78b64e5/3.png" alt="3"></p><h4 id="解决方案1：前端反向代理"><a href="#解决方案1：前端反向代理" class="headerlink" title="解决方案1：前端反向代理"></a>解决方案1：前端反向代理</h4><p>正向代理隐藏真实客户端，反向代理隐藏真实服务端。<br>反向代理通过连接反向代理服务器，反向代理服务器和真实服务器由于不经过浏览器没有同源策略限制，可直接发送请求。<br>vue.config.js文件中，在devServe下按指定格式配置proxy</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">  devServer: &#123;</span><br><span class="line">        &#x2F;&#x2F; 代理配置</span><br><span class="line">    proxy: &#123;</span><br><span class="line">        &#x2F;&#x2F; 这里的api 表示如果我们的请求地址有&#x2F;api的时候,就出触发代理机制</span><br><span class="line">        &#x2F;&#x2F; http:&#x2F;&#x2F;localhost:9588&#x2F;api&#x2F;abc  &#x3D;&gt; 代理给另一个服务器</span><br><span class="line">        &#x2F;&#x2F; 本地的前端  &#x3D;》 本地的后端  &#x3D;》 代理我们向另一个服务器发请求 （行得通）</span><br><span class="line">        &#x2F;&#x2F; 本地的前端  &#x3D;》 另外一个服务器发请求 （跨域 行不通）</span><br><span class="line">        &#39;&#x2F;api&#39;: &#123;</span><br><span class="line">        target: &#39;www.baidu.com&#39;, &#x2F;&#x2F; 打比方这是我们要代理的地址</span><br><span class="line">        changeOrigin: true, &#x2F;&#x2F; 是否跨域 需要设置此值为true 才可以让本地服务代理我们发出请求</span><br><span class="line">         &#x2F;&#x2F; 路径重写</span><br><span class="line">        pathRewrite: &#123;</span><br><span class="line">         &#x2F;&#x2F; 假设我们想把 http:&#x2F;&#x2F;localhost:9588&#x2F;api&#x2F;abc 变成www.baidu.com&#x2F;abc 就需要这么做 </span><br><span class="line">         &#39;^&#x2F;api&#39;: &#39;&#39; </span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="解决方案2：后端配置允许跨域"><a href="#解决方案2：后端配置允许跨域" class="headerlink" title="解决方案2：后端配置允许跨域"></a>解决方案2：后端配置允许跨域</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//跨域配置</span></span><br><span class="line">builder.Services.AddCors(policy =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    policy.AddPolicy(<span class="string">&quot;CorsPolicy&quot;</span>, opt =&gt; opt</span><br><span class="line">    .AllowAnyOrigin()</span><br><span class="line">    .AllowAnyHeader()</span><br><span class="line">    .AllowAnyMethod()</span><br><span class="line">    .WithExposedHeaders(<span class="string">&quot;X-Pagination&quot;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//启用跨域</span></span><br><span class="line">app.UseCors(<span class="string">&quot;CorsPolicy&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="解决方案3：JSONP"><a href="#解决方案3：JSONP" class="headerlink" title="解决方案3：JSONP"></a>解决方案3：JSONP</h4><p>利用的script无同源策略，数据写在js内传输js文件，本地调用js内方法等</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;PUT报405-Error-Method-Not-Allowed错误&quot;&gt;&lt;a href=&quot;#PUT报405-Error-Method-Not-Allowed错误&quot; class=&quot;headerlink&quot; title=&quot;PUT报405 Error: Method No</summary>
      
    
    
    
    
    <category term="IIS" scheme="https://xuzengjie.gitee.io/tags/IIS/"/>
    
    <category term="错误" scheme="https://xuzengjie.gitee.io/tags/%E9%94%99%E8%AF%AF/"/>
    
  </entry>
  
  <entry>
    <title>60-Docker</title>
    <link href="https://xuzengjie.gitee.io/archives/d4befdef.html"/>
    <id>https://xuzengjie.gitee.io/archives/d4befdef.html</id>
    <published>2022-11-23T16:00:00.000Z</published>
    <updated>2023-07-04T08:30:53.546Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-是什么"><a href="#Docker-是什么" class="headerlink" title="Docker 是什么"></a>Docker 是什么</h1><p>Docker 是一个应用打包、分发、部署的工具<br>你也可以把它理解为一个轻量的虚拟机，它只虚拟你软件需要的运行环境，多余的一点都不要</p><h1 id="打包、分发、部署"><a href="#打包、分发、部署" class="headerlink" title="打包、分发、部署"></a>打包、分发、部署</h1><p>打包：就是把你软件运行所需的依赖、第三方库、软件打包到一起，变成一个安装包<br>分发：你可以把你打包好的“安装包”上传到一个镜像仓库，其他人可以非常方便的获取和安装<br>部署：拿着“安装包”就可以一个命令运行起来你的应用，自动模拟出一摸一样的运行环境，不管是在 Windows/Mac/Linux。</p><h1 id="Docker-部署的优势"><a href="#Docker-部署的优势" class="headerlink" title="Docker 部署的优势"></a>Docker 部署的优势</h1><p>用 Docker 开发部署流程：自己在 Windows 上开发、测试 –&gt; 打包为 Docker 镜像（可以理解为软件安装包） –&gt; 各种服务器上只需要一个命令部署好</p><h1 id="Docker-通常用来做什么"><a href="#Docker-通常用来做什么" class="headerlink" title="Docker 通常用来做什么"></a>Docker 通常用来做什么</h1><ol><li>应用分发、部署，方便传播给他人安装。特别是开源软件和提供私有部署的应用</li><li>快速安装测试/学习软件，用完就丢（类似小程序），不把时间浪费在安装软件上。例如 Redis / MongoDB / ElasticSearch / ELK</li><li>多个版本软件共存，不污染系统，例如 Python2、Python3，Redis4.0，Redis5.0</li><li>Windows 上体验/学习各种 Linux 系统</li></ol><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>桌面版：<a href="https://www.docker.com/products/docker-desktop">https://www.docker.com/products/docker-desktop</a><br>服务器版：<a href="https://docs.docker.com/engine/install/#server">https://docs.docker.com/engine/install/#server</a></p><h2 id="BIOS-开启虚拟化"><a href="#BIOS-开启虚拟化" class="headerlink" title="BIOS 开启虚拟化"></a>BIOS 开启虚拟化</h2><p>可通过任务管理器判断是否开启<br><img src="/archives/d4befdef/4.png" alt="4"></p><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><h3 id="WSL-2-异常"><a href="#WSL-2-异常" class="headerlink" title="WSL 2 异常"></a>WSL 2 异常</h3><p>下载 <a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">WLS2 更新包</a> 更新<br><img src="/archives/d4befdef/1.png" alt="1"></p><h3 id="启动报错"><a href="#启动报错" class="headerlink" title="启动报错"></a>启动报错</h3><p><img src="/archives/d4befdef/2.png" alt="2"><br>解决：开启 Windows 虚拟机监控程序平台和 Linux 子系统（WSL2)<br><img src="/archives/d4befdef/3.png" alt="3"></p><h3 id="提示-Docker-Desktop-stopped…"><a href="#提示-Docker-Desktop-stopped…" class="headerlink" title="提示 Docker Desktop stopped…"></a>提示 Docker Desktop stopped…</h3><p>安装使用<a href="https://docs.docker.com/desktop/release-notes/">历史版本</a></p><h1 id="镜像加速源"><a href="#镜像加速源" class="headerlink" title="镜像加速源"></a>镜像加速源</h1><table><thead><tr><th>镜像加速器</th><th>镜像加速器地址</th></tr></thead><tbody><tr><td>Docker 中国官方镜像</td><td><a href="https://registry.docker-cn.com/">https://registry.docker-cn.com</a></td></tr><tr><td>DaoCloud 镜像站</td><td><a href="http://f1361db2.m.daocloud.io/">http://f1361db2.m.daocloud.io</a></td></tr><tr><td>Azure 中国镜像</td><td><a href="https://dockerhub.azk8s.cn/">https://dockerhub.azk8s.cn</a></td></tr><tr><td>科大镜像站</td><td><a href="https://docker.mirrors.ustc.edu.cn/">https://docker.mirrors.ustc.edu.cn</a></td></tr><tr><td>阿里云</td><td>https://<your_code>.mirror.aliyuncs.com</your_code></td></tr><tr><td>七牛云</td><td><a href="https://reg-mirror.qiniu.com/">https://reg-mirror.qiniu.com</a></td></tr><tr><td>网易云</td><td><a href="https://hub-mirror.c.163.com/">https://hub-mirror.c.163.com</a></td></tr><tr><td>腾讯云</td><td><a href="https://mirror.ccs.tencentyun.com/">https://mirror.ccs.tencentyun.com</a></td></tr></tbody></table><p><img src="/archives/d4befdef/5.png" alt="5"></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>在 <a href="https://hub.docker.com/">仓库</a> 搜索需要的软件<br>在 cmd 内执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker container run redis</span><br></pre></td></tr></table></figure><h1 id="安装使用-mysql"><a href="#安装使用-mysql" class="headerlink" title="安装使用 mysql"></a>安装使用 mysql</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#拉取镜像</span><br><span class="line">docker pull mysql:8.0.20</span><br><span class="line">#启动镜像,用于拷贝配置文件到宿主机</span><br><span class="line">docker run -p 12305:3306 --name mysql -e MYSQL_ROOT_PASSWORD&#x3D;123456 -d mysql:8.0.20</span><br><span class="line">#查看是否启动成功</span><br><span class="line">docker ps -a</span><br><span class="line">#新建挂载目录并拷贝配置文件</span><br><span class="line">mkdir -p &#x2F;mysqldata&#x2F;</span><br><span class="line">docker cp  mysql:&#x2F;etc&#x2F;mysql &#x2F;mysqldata&#x2F;</span><br><span class="line">#删除原有镜像</span><br><span class="line">docker stop mysql</span><br><span class="line">docker rm -f mysql</span><br><span class="line">#启动mysql ，挂载配置文件，数据持久化到宿主主机</span><br><span class="line">docker run \</span><br><span class="line">-p 13306:3306 \</span><br><span class="line">--name mysql \</span><br><span class="line">--privileged&#x3D;true \</span><br><span class="line">--restart unless-stopped \</span><br><span class="line">-v &#x2F;home&#x2F;mysqldata&#x2F;mysql:&#x2F;etc&#x2F;mysql \</span><br><span class="line">-v &#x2F;home&#x2F;mysqldata&#x2F;mysql&#x2F;logs:&#x2F;logs \</span><br><span class="line">-v &#x2F;home&#x2F;mysqldata&#x2F;mysql&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql \</span><br><span class="line">-v &#x2F;etc&#x2F;localtime:&#x2F;etc&#x2F;localtime \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD&#x3D;cqrecadmin \</span><br><span class="line">-d mysql:8.0.20</span><br><span class="line">#检查是否运行成功</span><br><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker inspect mysql</span><br><span class="line"># 查看容器所有状态信息；</span><br><span class="line"></span><br><span class="line">#直接输出 IP 地址信息</span><br><span class="line">docker inspect --format &#39;&#123;&#123; .NetworkSettings.IPAddress &#125;&#125;&#39; mysql</span><br></pre></td></tr></table></figure><h1 id="安装-EMQX"><a href="#安装-EMQX" class="headerlink" title="安装 EMQX"></a>安装 EMQX</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull emqx&#x2F;emqx:5.0.9</span><br><span class="line">docker run -d --name emqx -p 1883:1883 -p 8083:8083 -p 8883:8883 -p 8084:8084 -p 18083:18083 emqx&#x2F;emqx:5.0.9</span><br></pre></td></tr></table></figure><p>网址：<a href="http://127.0.0.1:18083/">http://127.0.0.1:18083/</a><br>账号：admin<br>密码：public</p><h1 id="nginx-命令"><a href="#nginx-命令" class="headerlink" title="nginx 命令"></a>nginx 命令</h1><p>在 nginx 目录下可执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">start nginx    #启动</span><br><span class="line"></span><br><span class="line">nginx -s reopen #重启Nginx</span><br><span class="line"></span><br><span class="line">nginx -s reload #重新加载Nginx配置文件，然后以优雅的方式重启Nginx</span><br><span class="line"></span><br><span class="line">nginx -s stop #强制停止Nginx服务</span><br><span class="line"></span><br><span class="line">nginx -s quit #优雅地停止Nginx服务（即处理完所有请求后再停止服务）</span><br><span class="line"></span><br><span class="line">nginx -t #检测配置文件是否有语法错误，然后退出</span><br><span class="line"></span><br><span class="line">nginx -?,-h #打开帮助信息</span><br><span class="line"></span><br><span class="line">nginx -v #显示版本信息并退出</span><br><span class="line"></span><br><span class="line">nginx -V #显示版本和配置选项信息，然后退出</span><br><span class="line"></span><br><span class="line">nginx -t #检测配置文件是否有语法错误，然后退出</span><br><span class="line"></span><br><span class="line">nginx -T #检测配置文件是否有语法错误，转储并退出</span><br><span class="line"></span><br><span class="line">nginx -q #在检测配置文件期间屏蔽非错误信息</span><br><span class="line"></span><br><span class="line">nginx -p prefix #设置前缀路径(默认是:&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;)</span><br><span class="line"></span><br><span class="line">nginx -c filename #设置配置文件(默认是:&#x2F;etc&#x2F;nginx&#x2F;nginx.conf)</span><br><span class="line"></span><br><span class="line">nginx -g directives #设置配置文件外的全局指令</span><br><span class="line"></span><br><span class="line">killall nginx #杀死所有nginx进程</span><br></pre></td></tr></table></figure><h1 id="Docker-查询-IP"><a href="#Docker-查询-IP" class="headerlink" title="Docker 查询 IP"></a>Docker 查询 IP</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、docker inspect 容器 ID</span><br><span class="line">2、docker inspect --format&#x3D;&#39;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&#39; 容器名称</span><br></pre></td></tr></table></figure><h1 id="Docker-内安装-Ubuntu"><a href="#Docker-内安装-Ubuntu" class="headerlink" title="Docker 内安装 Ubuntu"></a>Docker 内安装 Ubuntu</h1><p>在 CMD 内执行</p><h3 id="拉最新镜像"><a href="#拉最新镜像" class="headerlink" title="拉最新镜像"></a>拉最新镜像</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker pull ubuntu</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line">docker pull ubuntu:latest</span><br></pre></td></tr></table></figure><h3 id="生成并运行容器-命名-ubuntu-test"><a href="#生成并运行容器-命名-ubuntu-test" class="headerlink" title="生成并运行容器,命名 ubuntu-test"></a>生成并运行容器,命名 ubuntu-test</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name ubuntu-test ubuntu</span><br></pre></td></tr></table></figure><h3 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it ubuntu-test &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><h3 id="退出容器"><a href="#退出容器" class="headerlink" title="退出容器"></a>退出容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Docker-是什么&quot;&gt;&lt;a href=&quot;#Docker-是什么&quot; class=&quot;headerlink&quot; title=&quot;Docker 是什么&quot;&gt;&lt;/a&gt;Docker 是什么&lt;/h1&gt;&lt;p&gt;Docker 是一个应用打包、分发、部署的工具&lt;br&gt;你也可以把它理解为一个</summary>
      
    
    
    
    
    <category term="Docker" scheme="https://xuzengjie.gitee.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>59-反射</title>
    <link href="https://xuzengjie.gitee.io/archives/7d72b967.html"/>
    <id>https://xuzengjie.gitee.io/archives/7d72b967.html</id>
    <published>2022-11-17T16:00:00.000Z</published>
    <updated>2022-11-18T07:04:48.239Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">User</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过字符串，转换为属性名，获取属性值</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Get</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    User u = <span class="keyword">new</span> User();</span><br><span class="line">    u.Name = <span class="string">&quot;xzj&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> propName = <span class="string">&quot;Name&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> propNameVal = u.GetType().GetProperty(propName).GetValue(u);</span><br><span class="line">    Console.WriteLine(propNameVal);<span class="comment">// &quot;xzj&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过字符串，转换为属性名，设置属性值</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Set</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    User u = <span class="keyword">new</span> User();</span><br><span class="line">    u.Name = <span class="string">&quot;xzj&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> propName = <span class="string">&quot;Name&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> newVal = <span class="string">&quot;徐zj&quot;</span>;</span><br><span class="line">    u.GetType().GetProperty(propName).SetValue(u, newVal);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> propNameVal = u.GetType().GetProperty(propName).GetValue(u);</span><br><span class="line">    Console.WriteLine(propNameVal);<span class="comment">// &quot;徐zj&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//便利所有属性和属性类型</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Each</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    User u = <span class="keyword">new</span> User();</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> u.GetType().GetProperties())</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;propName:<span class="subst">&#123;item.Name&#125;</span>,propType:<span class="subst">&#123;item.PropertyType.Name&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// propName: Id,propType: Int32</span></span><br><span class="line">    <span class="comment">// propName:Name,propType: String</span></span><br><span class="line">    <span class="comment">// propName:Age,propType: String</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="function"><span class="keyword">var</span> item <span class="keyword">in</span> <span class="title">typeof</span>(<span class="params">User</span>).<span class="title">GetProperties</span>(<span class="params"></span>))</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;propName:<span class="subst">&#123;item.Name&#125;</span>,propType:<span class="subst">&#123;item.PropertyType.Name&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// propName: Id,propType: Int32</span></span><br><span class="line">    <span class="comment">// propName:Name,propType: String</span></span><br><span class="line">    <span class="comment">// propName:Age,propType: String</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="判断对象是否包含某个属性"><a href="#判断对象是否包含某个属性" class="headerlink" title="判断对象是否包含某个属性"></a>判断对象是否包含某个属性</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    User u = <span class="keyword">new</span> User();</span><br><span class="line">    <span class="keyword">bool</span> isContain= ContainProperty(u,<span class="string">&quot;Name&quot;</span>);<span class="comment">// true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">ContainProperty</span>(<span class="params"> <span class="keyword">object</span> instance, <span class="keyword">string</span> propertyName</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (instance != <span class="literal">null</span> &amp;&amp; !<span class="keyword">string</span>.IsNullOrEmpty(propertyName))</span><br><span class="line">    &#123;</span><br><span class="line">        PropertyInfo _findedPropertyInfo = instance.GetType().GetProperty(propertyName);</span><br><span class="line">        <span class="keyword">return</span> (_findedPropertyInfo != <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight c#&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    
    <category term="反射" scheme="https://xuzengjie.gitee.io/tags/%E5%8F%8D%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>58-工厂反射</title>
    <link href="https://xuzengjie.gitee.io/archives/4f752310.html"/>
    <id>https://xuzengjie.gitee.io/archives/4f752310.html</id>
    <published>2022-10-30T16:00:00.000Z</published>
    <updated>2022-11-02T00:01:40.576Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简单工厂设计模式"><a href="#简单工厂设计模式" class="headerlink" title="简单工厂设计模式"></a>简单工厂设计模式</h1><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>  ​      比如说我们要实现打印的功能，既可以使用惠普打印机打印，也可以使用佳能打印机打印，以后可能会扩展其他的打印机打印，虽然打印的实现方式不同，但他们都是实现打印的功能。</p><p>  ​      简单工厂的本质就是解决单一对象的创建问题</p><h3 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h3><ol><li><p>首先要定义一个工厂,其中包括 </p><ul><li>工厂制造类（Factory)：用来创建产品对象</li><li>一个接口(IPrint)：定义产品信息的规范</li></ul></li><li><p>定义需要生产的具体产品，并实现定义产品信息规范的接口</p></li><li><p>在工厂制造类中利用配置文件信息，通过反射创建对应的产品即可</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 获取产品对象</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;printClassName&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IPrint <span class="title">GetPrint</span>(<span class="params"><span class="keyword">string</span> printClassName</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (IPrint)Assembly.Load(<span class="string">&quot;FactoryTest&quot;</span>).CreateInstance(<span class="string">&quot;&quot;</span> + printClassName);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h3><ol><li>如果需要扩展新的打印机，那么直接添加新的打印机类实现此产品规范即可。如果需要创建此产品，工厂制造类就可以根据配置创建此产品对象</li><li>符合 c# 开闭原则（对扩展开放，对修改关闭），里氏替换原则，迪米特法则等等</li></ol><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Reflection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> _print = PrintFactory.CreatePrint(<span class="string">&quot;JNPrint&quot;</span>);</span><br><span class="line">_print.Print();</span><br><span class="line">Console.ReadLine();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IPrint</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Print</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HPPrint</span> : <span class="title">IPrint</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Print</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;惠普打印&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JNPrint</span> : <span class="title">IPrint</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Print</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;佳能打印&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PrintFactory</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 获取产品对象</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;printClassName&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IPrint <span class="title">CreatePrint</span>(<span class="params"><span class="keyword">string</span> printClassName</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">return</span> (IPrint)Assembly.Load(<span class="string">&quot;FactoryTest&quot;</span>).CreateInstance(<span class="string">&quot;&quot;</span> + printClassName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;简单工厂设计模式&quot;&gt;&lt;a href=&quot;#简单工厂设计模式&quot; class=&quot;headerlink&quot; title=&quot;简单工厂设计模式&quot;&gt;&lt;/a&gt;简单工厂设计模式&lt;/h1&gt;&lt;h3 id=&quot;应用场景&quot;&gt;&lt;a href=&quot;#应用场景&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    
    <category term="工厂模式" scheme="https://xuzengjie.gitee.io/tags/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    
    <category term="反射" scheme="https://xuzengjie.gitee.io/tags/%E5%8F%8D%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>57-JWT和Token</title>
    <link href="https://xuzengjie.gitee.io/archives/c00a4fce.html"/>
    <id>https://xuzengjie.gitee.io/archives/c00a4fce.html</id>
    <published>2022-10-29T16:00:00.000Z</published>
    <updated>2022-11-02T00:01:40.575Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Token"><a href="#Token" class="headerlink" title="Token"></a>Token</h1><h3 id="认证流程"><a href="#认证流程" class="headerlink" title="认证流程"></a>认证流程</h3><ol><li>用户输入用户名和密码，发送给服务器，服务器验证账号密码成功</li><li>服务器生成令牌，本质是一个唯一字符串，可以使用uuid</li><li>将该令牌存到数据库或redis中，key是uuid，value是用户信息</li><li>把令牌返给客户端</li><li>下次请求的时候就把令牌放在请求头里带上</li><li>从数据库或redis中验证该令牌是否过期</li><li>没有过期获取value内容user信息</li></ol><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ol><li>可以隐藏真实数据，安全系数高</li><li>适用于分布式/微服务</li><li>token支持手动控制，过期、吊销等</li><li>可以实时查询现有token</li></ol><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ol><li>存放在数据库或者redis，依赖服务器资源</li><li>效率相对jwt比较低</li></ol><h1 id="JWT"><a href="#JWT" class="headerlink" title="JWT"></a>JWT</h1><p>JWT是json web token缩写。它将用户信息加密到token里，服务器不保存任何用户信息。服务器通过使用保存的密钥验证token的正确性，只要正确即通过验证</p><h3 id="认证流程-1"><a href="#认证流程-1" class="headerlink" title="认证流程"></a>认证流程</h3><ol><li>用户输入用户名和密码，发送给服务器，服务器验证账号密码成功</li><li>服务器使用签名秘钥生成jwt，把用户id放到jwt中（用户名加密返回客户端）</li><li>把令牌返给客户端</li><li>下次请求的时候就把令牌放在请求头里带上</li><li>服务器使用签名秘钥验证jwt是否有效（解密获取用户名）</li><li>有效后可以从jwt中获取到用户id</li></ol><h3 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h3><ol><li>jwt自身包含用户信息且无法篡改，数据实际保存在客户端，可以分担数据库或服务器的存储压力</li></ol><h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><ol><li>建议不要放敏感数据</li><li>Jwt生成之后无法修改（发生变化）</li><li>后端无法统计生成jwt</li><li>无法吊销令牌，只能等待令牌自身过期</li><li>令牌长度与其包含用户信息多少正相关，传输开销较大</li><li>Jwt是无状态的，如果别人获取到了，别人也能用</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Token&quot;&gt;&lt;a href=&quot;#Token&quot; class=&quot;headerlink&quot; title=&quot;Token&quot;&gt;&lt;/a&gt;Token&lt;/h1&gt;&lt;h3 id=&quot;认证流程&quot;&gt;&lt;a href=&quot;#认证流程&quot; class=&quot;headerlink&quot; title=&quot;认证流程&quot;</summary>
      
    
    
    
    
    <category term="权限验证" scheme="https://xuzengjie.gitee.io/tags/%E6%9D%83%E9%99%90%E9%AA%8C%E8%AF%81/"/>
    
    <category term="JWT" scheme="https://xuzengjie.gitee.io/tags/JWT/"/>
    
    <category term="Token" scheme="https://xuzengjie.gitee.io/tags/Token/"/>
    
  </entry>
  
  <entry>
    <title>56-SqlSugar</title>
    <link href="https://xuzengjie.gitee.io/archives/664e5344.html"/>
    <id>https://xuzengjie.gitee.io/archives/664e5344.html</id>
    <published>2022-10-24T16:00:00.000Z</published>
    <updated>2022-11-02T00:01:40.573Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据库对象"><a href="#数据库对象" class="headerlink" title="数据库对象"></a>数据库对象</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">SqlSugarClient db = <span class="keyword">new</span> SqlSugarClient(<span class="keyword">new</span> ConnectionConfig()</span><br><span class="line">        &#123;</span><br><span class="line">            ConnectionString = <span class="string">@&quot;Server=192.168.152.3;Database=mes;Uid=mes;Pwd=mes@123!;&quot;</span>,</span><br><span class="line">            DbType = SqlSugar.DbType.MySql,</span><br><span class="line">            IsAutoCloseConnection = <span class="literal">true</span></span><br><span class="line">        &#125;, db =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            db.Aop.OnLogExecuting = (sql, pars) =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(sql);<span class="comment">//输出sql,查看执行sql 性能无影响</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//5.0.8.2 获取无参数化SQL 对性能有影响，特别大的SQL参数多的，调试使用</span></span><br><span class="line">                <span class="comment">//UtilMethods.GetSqlString(DbType.SqlServer,sql,pars)</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h1 id="原生SQL-当一个DBHelper使用"><a href="#原生SQL-当一个DBHelper使用" class="headerlink" title="原生SQL(当一个DBHelper使用)"></a>原生SQL(当一个DBHelper使用)</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询</span></span><br><span class="line"><span class="keyword">var</span> dt=db.Ado.GetDataTable(sql)</span><br><span class="line"></span><br><span class="line"><span class="comment">//增删改和存储过程，返回影响行数</span></span><br><span class="line">db.Ado.ExecuteCommand(sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">//批量执行使用长连接</span></span><br><span class="line"> <span class="keyword">using</span> (db.Ado.OpenAlways()) &#123; <span class="comment">//开启长连接</span></span><br><span class="line">      <span class="keyword">foreach</span>(<span class="keyword">var</span> pars <span class="keyword">in</span> List&lt;parameter[]&gt;)</span><br><span class="line">      &#123;</span><br><span class="line">         db.Ado.ExecuteCommand(sql,paras);</span><br><span class="line">      &#125;    </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询表的所有</span></span><br><span class="line"><span class="keyword">var</span> list = db.Queryable&lt;Student&gt;().ToList();</span><br><span class="line"><span class="keyword">var</span> list = db.Queryable&lt;Student&gt;().Where(x=&gt;x.id==<span class="number">1</span>).ToList();</span><br><span class="line"></span><br><span class="line"><span class="comment">//插入</span></span><br><span class="line">db.Insertable(<span class="keyword">new</span> Student() &#123; SchoolId = <span class="number">1</span>, Name = <span class="string">&quot;jack&quot;</span> &#125;).ExecuteCommand();</span><br><span class="line">      </span><br><span class="line"><span class="comment">//更新</span></span><br><span class="line">db.Updateable(<span class="keyword">new</span> Student() &#123; Id = <span class="number">1</span>, SchoolId = <span class="number">2</span>, Name = <span class="string">&quot;jack2&quot;</span> &#125;).ExecuteCommand();</span><br><span class="line">      </span><br><span class="line"><span class="comment">//删除</span></span><br><span class="line">db.Deleteable&lt;Student&gt;().Where(it =&gt; it.Id == <span class="number">1</span>).ExecuteCommand();</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;数据库对象&quot;&gt;&lt;a href=&quot;#数据库对象&quot; class=&quot;headerlink&quot; title=&quot;数据库对象&quot;&gt;&lt;/a&gt;数据库对象&lt;/h1&gt;&lt;figure class=&quot;highlight c#&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p</summary>
      
    
    
    
    
    <category term="数据库" scheme="https://xuzengjie.gitee.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="SqlSugar" scheme="https://xuzengjie.gitee.io/tags/SqlSugar/"/>
    
  </entry>
  
  <entry>
    <title>55-Oracle</title>
    <link href="https://xuzengjie.gitee.io/archives/a16fcb03.html"/>
    <id>https://xuzengjie.gitee.io/archives/a16fcb03.html</id>
    <published>2022-07-02T16:00:00.000Z</published>
    <updated>2022-11-02T00:01:40.572Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><table><thead><tr><th>类型</th><th>名称</th><th>最大</th><th>举例</th><th>备注</th></tr></thead><tbody><tr><td>char</td><td>定长字符串</td><td>2000字节</td><td>CHAR(10)</td><td>会使用空格补齐至最大容量</td></tr><tr><td>varchar2</td><td>不定长字符串</td><td>4000字节</td><td>varchar2(10)</td><td>最大1/3长度的中文</td></tr><tr><td>nvarchar2</td><td>不定长字符串</td><td>2000字符</td><td>nvarchar2(10)</td><td>中文英文最大长度等长</td></tr><tr><td>number</td><td>数值</td><td>38位</td><td>number(10,2)</td><td>精度超了会四舍五入</td></tr><tr><td>date</td><td>日期</td><td>X字节</td><td>date</td><td>精确到秒</td></tr><tr><td>timestamp</td><td>日期</td><td>X字节</td><td>timestamp</td><td>精确到毫秒</td></tr><tr><td>blob</td><td>二进制数据</td><td>4G</td><td>blob</td><td>可以存文件、图片等</td></tr></tbody></table><h1 id="伪表"><a href="#伪表" class="headerlink" title="伪表"></a>伪表</h1><p>Dual表是只含有一个字段且只有一行记录的表。<br>Oracle和MySQL中有，MsSQL中无。Oracle 常用，Mysql基本不用。</p><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>当数据库引擎发现用户在SELET语句处理dual表时，数据库引擎会跳过查询过程，以此节约开销。<br>这个特性用来做单纯处理数据，而不进行查询的操作时格外合适。<br>即字符处理函数的语法格式需要借助dual表实现。</p><h1 id="伪列"><a href="#伪列" class="headerlink" title="伪列"></a>伪列</h1><h1 id="函数Function"><a href="#函数Function" class="headerlink" title="函数Function"></a>函数Function</h1><h3 id="系统函数"><a href="#系统函数" class="headerlink" title="系统函数"></a>系统函数</h3><table><thead><tr><th>关键字</th><th>描述</th><th>举例</th></tr></thead><tbody><tr><td>lower</td><td>小写</td><td>lower(‘abCdEFg’)</td></tr><tr><td>Upper</td><td>大写</td><td>Upper(‘abCdEFg’)</td></tr><tr><td>ASCII</td><td>字符转ASCII</td><td>ASCII(‘a’)   –97</td></tr><tr><td>chr</td><td>ASCII转字符</td><td>chr(97)         –a</td></tr><tr><td>Initcap</td><td>首字母大写，其它小写</td><td>Initcap(‘abCdEFg’)</td></tr><tr><td>CONCAT</td><td>字符串拼接</td><td>CONCAT(‘hello’,’world’)</td></tr><tr><td>SUBSTR</td><td>字符串截取</td><td>SUBSTR(‘helloWorld’,1,5)</td></tr><tr><td>LENGTH</td><td>字符串长度</td><td>LENGTH(‘helloWorld’)</td></tr><tr><td>INSTR</td><td>字符串查询</td><td>INSTR(‘helloWorld’,’W’，2，1)</td></tr><tr><td>LPAD</td><td>左侧补字符</td><td>LPAD(‘10’,5,’0’)</td></tr><tr><td>RPAD</td><td>右侧补字符</td><td>RPAD(‘123’,5,’0’)</td></tr><tr><td>TRIM</td><td>移除头尾的字符</td><td>TRIM(both、leading、trailing ‘H’ FROM ‘HelloWorld’)</td></tr><tr><td>REPLACE</td><td>字符串替换</td><td>REPLACE(‘123456789’,’345’,’000’)    –120006789</td></tr><tr><td>round</td><td>指定小数四舍五入</td><td>round(45.926,2)   –45.93</td></tr><tr><td>trunc</td><td>指定小数截断</td><td>trunc(45.926,2)      –45.92</td></tr><tr><td>mod</td><td>取余</td><td>mod(1600,300)      –100</td></tr><tr><td>ABS</td><td>绝对值</td><td>ABS(-1)</td></tr><tr><td>ACOS</td><td>反余弦</td><td>ACOS(1)=0</td></tr><tr><td>COS</td><td>余弦</td><td>COS(1)=0.54030230586814</td></tr><tr><td>Ceil</td><td>向上取整</td><td>CEIL(5.4)=6</td></tr><tr><td>Floor</td><td>向下取整</td><td>FLOOR(5.8)=5</td></tr><tr><td>LOG(X,Y)</td><td>X为底Y的对数</td><td>LOG(2，4)=2</td></tr><tr><td>POWER(X,Y)</td><td>X的Y次幂</td><td>POWER(2，3)=8</td></tr><tr><td>SQRT(X)</td><td>X的平方根</td><td>SQRT(4)=2</td></tr><tr><td>to_date</td><td>转日期</td><td>sysdate、to_date(‘20220701 101010’,’yyyyMMdd hh24:mi:ss’)</td></tr><tr><td>to_number</td><td>转数值</td><td>to_number(‘201’)</td></tr><tr><td>to_char</td><td>转字符</td><td>to_char(201)、to_char(current_timestamp,’yyyymmdd hh24missff3’)</td></tr><tr><td>MONTHS_BETWEEN</td><td>月份差</td><td>MONTHS_BETWEEN(date1,date2)</td></tr><tr><td>NEXT_DAY</td><td>最近的下一个日期</td><td>NEXT_DAY(date,2)</td></tr><tr><td>LAST_DAY</td><td>当月的最后一天</td><td>LAST_DAY(date)</td></tr><tr><td>两个日期相减</td><td>带小数的差异天(可转换到分秒等)</td><td>sysdate-to_date(‘20220531’,’yyyyMMdd’)</td></tr></tbody></table><h3 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h3><h1 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h1><h3 id="四个特性"><a href="#四个特性" class="headerlink" title="四个特性"></a>四个特性</h3><p>原子性：要么全做（commit），要么全不做(rollback)。<br>一致性：事务的执行不能破坏数据库数据的完整性。<br>隔离性：一个事务的执行不被另一个事务的执行干扰。<br>持续性：一个事务一旦提交，它对数据库中数据的改变是永久的。</p><h3 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h3><p>提交：Commit<br>回滚：RollBack<br>设置回滚点：SavePoint point_name<br>回滚回滚点：RollBack To point_name</p><h1 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h1><p>一次编译多次运行，带流程的sql语句的集合</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>1、执行效率高<br>2、降低传输占用<br>3、复用性高<br>4、修改便捷<br>5、安全性高</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>谁用谁知道</p><h1 id="索引-Indexes"><a href="#索引-Indexes" class="headerlink" title="索引 Indexes"></a>索引 Indexes</h1><h1 id="DB-Links"><a href="#DB-Links" class="headerlink" title="DB Links"></a>DB Links</h1><h1 id="视图Views"><a href="#视图Views" class="headerlink" title="视图Views"></a>视图Views</h1><h2 id="普通视图"><a href="#普通视图" class="headerlink" title="普通视图"></a>普通视图</h2><p>就是个虚拟表，不建议使用。<br>就是个多表的组合查询，只能查询。</p><h2 id="物化视图-Materialized-Views"><a href="#物化视图-Materialized-Views" class="headerlink" title="物化视图 Materialized Views"></a>物化视图 Materialized Views</h2><p>目前只有Oracle原生支持物化视图。<br>一张物理表，Oracle内部帮忙自动更新。<br>一般情况查询速度比普通试图快。</p><h3 id="创建语句"><a href="#创建语句" class="headerlink" title="创建语句"></a>创建语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">materialized</span> <span class="keyword">view</span> 物化视图名        <span class="comment">-- 1. 创建物化视图</span></span><br><span class="line"><span class="keyword">build</span> [<span class="keyword">immediate</span> | <span class="keyword">deferred</span>]   <span class="comment">-- 2. 创建方式，默认 immediate</span></span><br><span class="line"><span class="keyword">refresh</span> [<span class="keyword">force</span> | <span class="keyword">fast</span> | <span class="keyword">complete</span> | <span class="keyword">never</span>] <span class="comment">-- 3. 物化视图刷新方式，默认 force</span></span><br><span class="line"><span class="keyword">on</span> [<span class="keyword">commit</span> | <span class="keyword">demand</span>]   <span class="comment">-- 4. 刷新触发方式</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> 开始时间  <span class="comment">-- 5. 设置开始时间</span></span><br><span class="line"><span class="keyword">next</span> 间隔时间              <span class="comment">-- 6. 设置间隔时间</span></span><br><span class="line"><span class="keyword">with</span> [primary <span class="keyword">key</span> | <span class="keyword">rowid</span>]                <span class="comment">-- 7. 类型，默认 primary key</span></span><br><span class="line">[<span class="keyword">enable</span> | <span class="keyword">disable</span>] <span class="keyword">query</span> rewrite          <span class="comment">-- 8. 是否启用查询重写</span></span><br><span class="line"><span class="keyword">as</span>                                      <span class="comment">-- 9. 关键字</span></span><br><span class="line">查询语句;                                  <span class="comment">-- 10. select 语句</span></span><br></pre></td></tr></table></figure><h3 id="语句解释"><a href="#语句解释" class="headerlink" title="语句解释"></a>语句解释</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1. 创建的方式</span><br><span class="line">(1) &#x27;immediate&#x27;：立即生效，默认。</span><br><span class="line">(2) &#x27;deferred&#x27; : 延迟至第一次刷新时才生效</span><br><span class="line">2. 刷新的方式</span><br><span class="line">(1) force：默认。如果可以 &#x27;快速刷新&#x27; 就 &#x27;快速刷新&#x27;，否则执行 &#x27;完全刷新&#x27;</span><br><span class="line">(2) fast：&#x27;快速刷新&#x27;。只刷新 &#x27;增量&#x27; 部分（前提：创建 &#x27;物化日志&#x27;）</span><br><span class="line">(3) complete: &#x27;完全刷新&#x27;。刷新时更新全部数据，包括视图中已经生成的原有数据</span><br><span class="line">(4) never: 从不刷新</span><br><span class="line">3. 触发 (请注意，on demand 中，才需要设置 &#x27;开始时间&#x27; 和 &#x27;间隔时间&#x27;) </span><br><span class="line">(1) on <span class="keyword">commit</span>：基表有 <span class="keyword">commit</span> 动作时，刷新刷图（<span class="string">&quot;不能跨库执行&quot;</span>）</span><br><span class="line">(<span class="number">2</span>) <span class="keyword">on</span> <span class="keyword">demand</span>：在需要时刷新</span><br><span class="line">       [<span class="number">1</span>] 根据后面设定的 <span class="string">&#x27;开始时间&#x27;</span> 和 <span class="string">&#x27;结束时间&#x27;</span> 进行刷新</span><br><span class="line">       [<span class="number">2</span>] 手动调用 dbms_mview 包中的过程进行刷新       </span><br><span class="line"><span class="number">4.</span> 基于基表的 primary <span class="keyword">key</span> 或 <span class="keyword">rowid</span> 创建</span><br><span class="line">(<span class="number">1</span>) 如果是基于 <span class="keyword">rowid</span>，则不能对基表执行 <span class="string">&#x27;分组函数&#x27;</span>、<span class="string">&#x27;多表连接&#x27;</span> 等需要把多个 <span class="keyword">rowid</span> 合成一行的操作（理由很简单：到底以哪个 <span class="keyword">rowid</span> 为准呢？）</span><br><span class="line"><span class="number">5.</span> <span class="keyword">enable</span> <span class="keyword">query</span> rewrite 启用查询重写（请注意， <span class="string">&#x27;开始时间&#x27;</span> 和 <span class="string">&#x27;间隔时间&#x27;</span> 不支持）</span><br><span class="line">(<span class="number">1</span>) 不支持的理由也很简单。</span><br><span class="line">所谓的 <span class="string">&#x27;重写&#x27;</span>，就是讲对基表的查询定位到物化视图上，</span><br><span class="line">而 <span class="string">&#x27;开始时间&#x27;</span> 和 <span class="string">&#x27;间隔时间&#x27;</span> 会造成物化视图上部分数据延迟，所以，不能重写</span><br><span class="line">(<span class="number">2</span>) 参数: query_rewrite_enabled (可通过 v$parameter 视图查询)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">---测试表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> person_info (</span><br><span class="line">  person_no   <span class="built_in">VARCHAR2</span>(<span class="number">10</span>),</span><br><span class="line">  <span class="keyword">NAME</span>        <span class="built_in">VARCHAR2</span>(<span class="number">30</span>),</span><br><span class="line">  create_date <span class="built_in">DATE</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> person_info <span class="keyword">add</span> <span class="keyword">constraint</span> pk_id  primary <span class="keyword">key</span> (person_no);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> person_info(person_no, <span class="keyword">NAME</span>, create_date) <span class="keyword">VALUES</span>(<span class="string">&#x27;001&#x27;</span>, <span class="string">&#x27;瑶瑶&#x27;</span>, <span class="keyword">SYSDATE</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> person_info(person_no, <span class="keyword">NAME</span>, create_date) <span class="keyword">VALUES</span>(<span class="string">&#x27;002&#x27;</span>, <span class="string">&#x27;倩倩&#x27;</span>, <span class="keyword">SYSDATE</span>);</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">----1分钟刷新一次</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">MATERIALIZED</span> <span class="keyword">VIEW</span> mvw_person_info </span><br><span class="line"><span class="keyword">BUILD</span> <span class="keyword">IMMEDIATE</span></span><br><span class="line"><span class="keyword">REFRESH</span> <span class="keyword">FORCE</span></span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">DEMAND</span></span><br><span class="line"><span class="keyword">START</span> <span class="keyword">WITH</span> <span class="keyword">SYSDATE</span></span><br><span class="line"><span class="keyword">NEXT</span> <span class="keyword">SYSDATE</span> + <span class="number">1</span>/<span class="number">1440</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span>  pi.person_no,    </span><br><span class="line">       pi.name,</span><br><span class="line">       pi.create_date</span><br><span class="line">  <span class="keyword">FROM</span> person_info <span class="keyword">pi</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-----1分钟增量刷新</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">materialized</span> <span class="keyword">view</span> <span class="keyword">log</span> <span class="keyword">on</span> person_info <span class="keyword">with</span> <span class="keyword">rowid</span>; </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">MATERIALIZED</span> <span class="keyword">VIEW</span> mvw_person_info </span><br><span class="line"><span class="keyword">REFRESH</span> <span class="keyword">FAST</span></span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">DEMAND</span></span><br><span class="line"><span class="keyword">START</span> <span class="keyword">WITH</span> <span class="keyword">SYSDATE</span></span><br><span class="line"><span class="keyword">NEXT</span> <span class="keyword">SYSDATE</span> + <span class="number">1</span>/<span class="number">1440</span></span><br><span class="line"><span class="keyword">with</span> <span class="keyword">rowid</span> </span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> P.ROWID <span class="keyword">AS</span> PROWID,P.person_no <span class="keyword">AS</span> pperson_no,P.NAME <span class="keyword">as</span> PNAME,P.create_date <span class="keyword">AS</span>  Pcreate_date</span><br><span class="line">  <span class="keyword">FROM</span> person_info P;</span><br><span class="line">  </span><br></pre></td></tr></table></figure><h1 id="包体-Packages"><a href="#包体-Packages" class="headerlink" title="包体 Packages"></a>包体 Packages</h1><h1 id="序列-Sequences"><a href="#序列-Sequences" class="headerlink" title="序列 Sequences"></a>序列 Sequences</h1><p>序列号生成器</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">SEQUENCE</span> 序列名    </span><br><span class="line"><span class="keyword">INCREMENT</span> <span class="keyword">BY</span> <span class="number">1</span>           <span class="comment">--步长，默认1，可为负数</span></span><br><span class="line"><span class="keyword">START</span> <span class="keyword">WITH</span> <span class="number">1</span><span class="comment">---最小</span></span><br><span class="line">MAXVALUE <span class="number">9999999</span><span class="comment">----最大</span></span><br><span class="line">[<span class="keyword">CYCLE</span> | <span class="keyword">NOCYCLE</span> ]<span class="comment">---是否循环。CYCLE循环；NOCYCLE不循环</span></span><br><span class="line">[<span class="keyword">CACHE</span> n| NOCACHE];<span class="comment">---缓存。NOCACHE不缓存；CACHE缓存，默认长度20，可修改</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> 序列名.currval   <span class="comment">---当前序列值</span></span><br><span class="line">,序列名.nextval <span class="comment">---下一个序列值，获取下一个序列值时，序列增加</span></span><br><span class="line"><span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure><h1 id="触发器-Triggers"><a href="#触发器-Triggers" class="headerlink" title="触发器 Triggers"></a>触发器 Triggers</h1><p>当 ‘触发条件’ 成立时，其语句就会 ‘自动执行’  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> [<span class="keyword">or</span> <span class="keyword">replace</span>] <span class="keyword">trigger</span> 触发器名</span><br><span class="line">   触发时间 &#123;<span class="keyword">before</span> | <span class="keyword">after</span>&#125;           <span class="comment">-- 前置触发(一般做校验)还是后置触发（一般用于添加其它表数据）</span></span><br><span class="line">   触发事件 &#123;<span class="keyword">insert</span> | <span class="keyword">update</span> | <span class="keyword">delete</span>&#125; </span><br><span class="line"><span class="keyword">on</span> 触发对象                            <span class="comment">-- table、view、schema、database </span></span><br><span class="line">   触发频率 &#123;<span class="keyword">for</span> <span class="keyword">each</span> <span class="keyword">row</span>&#125;            <span class="comment">-- 行级触发器。默认：语句级触发器</span></span><br><span class="line">   [<span class="keyword">follows</span> 其它触发器名]              <span class="comment">-- 多个触发器执行的 前后顺序</span></span><br><span class="line">   [<span class="keyword">when</span> 触发条件]</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">   pl/<span class="keyword">sql</span> 语句;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><ol><li>触发器名：一般格式 tr_*</li><li>触发时间：在 ‘触发事件’ 发生之前（before）还是之后（after）</li><li>触发事件：根据不同的 ‘触发事件’，可以分为不同的 ‘类型’</li><li>触发对象：table、view、schema、database</li><li>触发频率：’语句级触发器’（默认）指触发一次，’行级触发器’ 每一行触发一次</li><li>触发条件：仅当 ‘触发条件’ 为 True 时，才执行 pl/sql 语句</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">功能：after insert or update or delete 时，执行语句</span></span><br><span class="line"><span class="comment">命名：tr_aiud_student_info</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">trigger</span> scott.tr_aiud_student_info</span><br><span class="line">   <span class="keyword">after</span> </span><br><span class="line">   <span class="keyword">insert</span> <span class="keyword">or</span> <span class="keyword">update</span> <span class="keyword">or</span> <span class="keyword">delete</span> </span><br><span class="line">   <span class="keyword">on</span> scott.student_info</span><br><span class="line">   <span class="keyword">for</span> <span class="keyword">each</span> <span class="keyword">row</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">   <span class="keyword">case</span></span><br><span class="line">      <span class="keyword">when</span> inserting <span class="keyword">then</span></span><br><span class="line">         dbms_output.put_line(<span class="string">&#x27;插入成功！&#x27;</span>|| :new.lotid);</span><br><span class="line">      when updating then</span><br><span class="line">         dbms_output.put_line(&#x27;更新成功！&#x27;|| :OLD.lotid);</span><br><span class="line">      when deleting then</span><br><span class="line">         dbms_output.put_line(&#x27;删除成功！&#x27;|| :OLD.lotid);</span><br><span class="line">      else</span><br><span class="line">         dbms_output.put_line(&#x27;无操作！&#x27;);</span><br><span class="line">   <span class="keyword">end</span> <span class="keyword">case</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><p>当触发器执行失败时，会导致对表的操作失败。后置触发器会导致数据回滚。</p><h1 id="Jobs"><a href="#Jobs" class="headerlink" title="Jobs"></a>Jobs</h1><h1 id="同义词Synonyms"><a href="#同义词Synonyms" class="headerlink" title="同义词Synonyms"></a>同义词Synonyms</h1><p>连个词的意思可以互相替换。<br>类似别名，但别名只能在一个SQL语句中生效，同义词在整个数据库生效。<br>跨数据库的表也可以使用别名。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> [<span class="keyword">PUBLIC</span>] <span class="keyword">SYNONYM</span> synonym_name <span class="keyword">FOR</span> [ <span class="keyword">schema</span> .] <span class="keyword">object</span>[@db_link];</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PUBLIC</span> <span class="keyword">SYNONYM</span> arwen <span class="keyword">FOR</span> table_of_arwen;   <span class="comment">--创建所有用户同义词</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">SYNONYM</span> arwen <span class="keyword">FOR</span> table_of_arwen;    <span class="comment">--创建同义词</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--和正常表名一样使用同义词</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> arwen;</span><br><span class="line"><span class="keyword">update</span> arwen <span class="keyword">set</span> .. where.. ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">SYNONYM</span> arwen;    <span class="comment">---删除同义词</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PUBLIC</span> <span class="keyword">SYNONYM</span> public_emp;   <span class="comment">---删除所有同义词</span></span><br></pre></td></tr></table></figure><h3 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h3><p>1、多用户协同<br>2、简化SQL<br>3、管理多数据库连接</p><h1 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dbms_output.put_line(value);   <span class="comment">--Output,存储过程或函数调试时使用</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> All_Source    <span class="comment">----查询Oracle 数据库所有模式下Fun、Pro、Package等</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">v_str := <span class="keyword">sql</span>%rowcount;   <span class="comment">---执行完update 后获取影响行数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> cols <span class="keyword">WHERE</span> TABLE_name=<span class="keyword">upper</span>(<span class="string">&#x27;表名&#x27;</span>)  <span class="comment">----获取该表字段信息（字段名、字段类型、字段长度等）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tb <span class="keyword">modify</span> (<span class="keyword">name</span> <span class="keyword">nvarchar2</span>(<span class="number">20</span>));    <span class="comment">---修改字段类型</span></span><br></pre></td></tr></table></figure><p>全库搜索值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span></span><br><span class="line">  v_Sql   <span class="built_in">varchar2</span>(<span class="number">2000</span>);</span><br><span class="line">  v_count number;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">for</span> xx <span class="keyword">in</span> (<span class="keyword">select</span> t.OWNER, t.TABLE_NAME, t.COLUMN_NAME <span class="keyword">from</span> dba_tab_columns t <span class="keyword">where</span> t.OWNER = <span class="string">&#x27;数据库的属主名&#x27;</span>) <span class="keyword">loop</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      v_Sql := <span class="string">&#x27;select count(1) from &#x27;</span> || xx.owner || <span class="string">&#x27;.&#x27;</span> || xx.table_name ||<span class="string">&#x27; where &#x27;</span> || xx.column_name || <span class="string">&#x27; like &#x27;&#x27;%要查找的值，支持模糊查询%&#x27;&#x27; &#x27;</span>;</span><br><span class="line">      <span class="keyword">execute</span> <span class="keyword">immediate</span> v_Sql</span><br><span class="line">        <span class="keyword">into</span> v_count;</span><br><span class="line">      if (v_count &gt;= 1) then</span><br><span class="line">        dbms_output.put_line(xx.table_name || &#x27;:&#x27; || xx.column_name);</span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line">    exception</span><br><span class="line">      when others then</span><br><span class="line">        null;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">loop</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;数据类型&quot;&gt;&lt;a href=&quot;#数据类型&quot; class=&quot;headerlink&quot; title=&quot;数据类型&quot;&gt;&lt;/a&gt;数据类型&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;最大&lt;/th&gt;
&lt;th&gt;举例&lt;/</summary>
      
    
    
    
    
    <category term="Oracle" scheme="https://xuzengjie.gitee.io/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>54-搭建VSCode网页版-codeServer</title>
    <link href="https://xuzengjie.gitee.io/archives/35c889f4.html"/>
    <id>https://xuzengjie.gitee.io/archives/35c889f4.html</id>
    <published>2022-03-06T16:00:00.000Z</published>
    <updated>2022-10-28T07:21:14.635Z</updated>
    
    <content type="html"><![CDATA[<h1 id="code-server下载"><a href="#code-server下载" class="headerlink" title="code-server下载"></a>code-server下载</h1><p>可使用linux 命令下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/codercom/code-server/releases/download/v4.1.0/code-server-4.1.0-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><p>也可以下载到本地后上次到服务器。</p><h1 id="code-server解压"><a href="#code-server解压" class="headerlink" title="code-server解压"></a>code-server解压</h1><p>在服务器解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvzf code-server-4.1.0-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>第一次要先运行下，才能有配置文件<br>到解压目录的bin目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./code-server</span><br></pre></td></tr></table></figure><h1 id="code-server配置"><a href="#code-server配置" class="headerlink" title="code-server配置"></a>code-server配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.config/code-server/config.yaml</span><br></pre></td></tr></table></figure><dl><dt><img src="/archives/35c889f4/1325959860.png" alt="vscode配置.png"><br>i 是切换到编辑模式</dt><dd>是切换到命令模式<br>命令模式下w 保存，Q是退出</dd></dl><h1 id="运行-1"><a href="#运行-1" class="headerlink" title="运行"></a>运行</h1><p>到解压目录的bin目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./code-server</span><br></pre></td></tr></table></figure><p><img src="/archives/35c889f4/2344601155.png" alt="vscode2.png"></p><h1 id="添加开机启动"><a href="#添加开机启动" class="headerlink" title="添加开机启动"></a>添加开机启动</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rc.local</span><br></pre></td></tr></table></figure><p>添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/codeserver/code-server-4.1.0-linux-amd64/bin/</span><br><span class="line">./code-server $</span><br></pre></td></tr></table></figure><p>增加$是为了在后台运行<br><img src="/archives/35c889f4/3584466695.png" alt="1.png"></p><h1 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h1><p>记得在防火墙中开放端口，默认是8080</p><h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><p>可以正常安装插件，<br>比如 Chinese (Simplified) (简体中文)<br>比如 Live Server</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;code-server下载&quot;&gt;&lt;a href=&quot;#code-server下载&quot; class=&quot;headerlink&quot; title=&quot;code-server下载&quot;&gt;&lt;/a&gt;code-server下载&lt;/h1&gt;&lt;p&gt;可使用linux 命令下载&lt;/p&gt;
&lt;figure </summary>
      
    
    
    
    
    <category term="VSCode" scheme="https://xuzengjie.gitee.io/tags/VSCode/"/>
    
    <category term="linux" scheme="https://xuzengjie.gitee.io/tags/linux/"/>
    
  </entry>
  
</feed>
